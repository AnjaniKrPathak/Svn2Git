<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<class name="com.clinakos.data.model.patient.UserLoginDetail"
		table="user_details" lazy="false">
		<id name="id" type="int" column="Id">
			<generator class="increment" />
		</id>

		<property name="userId" type="int">
			<column name="user_id" />
		</property>

		<property name="firstName">
			<column name="first_name" read="UPPER(CAST(AES_DECRYPT(first_name, 'akos')AS CHAR(50)))" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>

		<property name="lastName" type="java.lang.String">
			<column name="last_name" read="UPPER(CAST(AES_DECRYPT(last_name, 'akos')AS CHAR(50)))" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		<property name="socialSecurityNumber" type="java.lang.String">
			<column name="social_security_number" read="AES_DECRYPT(social_security_number, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		<property name="dateOfBirth" type="java.util.Date">
			<column name="date_of_birth"  read="AES_DECRYPT(date_of_birth, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		<!-- <property name="height" type="java.lang.String"> <column name="height"/> 
			</property> <property name="weight" type="java.lang.String"> <column name="weight"/> 
			</property> -->
		<property name="email" type="java.lang.String">
			<column name="email" read="AES_DECRYPT(email, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		<property name="gender" type="java.lang.String">
			<column name="gender" read="AES_DECRYPT(gender, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		<property name="phoneNumber" type="java.lang.String">
			<column name="phone_number" read="AES_DECRYPT(phone_number, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		<!-- <property name="insuranceNumber" type="java.lang.String"> <column 
			name="insurance_No"/> </property> <property name="insuranceCompanyName" type="java.lang.String"> 
			<column name="insurancecompanyname"/> </property> -->
		<property name="dlNumber" type="java.lang.String">
			<column name="dl_no" read="AES_DECRYPT(dl_no, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		<!-- <property name="image" type="java.lang.String"> <column name="image"/> 
			</property> -->

		<property name="createdBy" type="java.lang.Integer">
			<column name="created_by" />
		</property>

		<property name="createdDate" type="java.util.Date">
			<column name="created_date" />
		</property>

		<property name="modifyBy" type="java.lang.Integer">
			<column name="updated_by" />
		</property>

		<property name="modifyDate" type="java.util.Date">
			<column name="updated_date" />
		</property>

		<property name="status" type="boolean">
			<column name="Status" />
		</property>

		<property name="doorNo" type="java.lang.String">
			<column name="door_no" read="AES_DECRYPT(door_no, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		<property name="street" type="java.lang.String">
			<column name="street" read="AES_DECRYPT(street, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		<property name="city" type="java.lang.String">
			<column name="city" read="AES_DECRYPT(city, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		<property name="state" type="java.lang.String">
			<column name="state" read="AES_DECRYPT(state, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		<property name="country" type="java.lang.String">
			<column name="country" read="AES_DECRYPT(country, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		<property name="pincode" type="java.lang.String">
			<column name="pin_code" read="AES_DECRYPT(pin_code, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		<property name="race" type="java.lang.String">
			<column name="race" read="AES_DECRYPT(race, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		<property name="middleName" type="java.lang.String">
		<column name="middle_name" read="AES_DECRYPT(middle_name, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"/>
		</property>
		
		<property name="checkIntegration" type="boolean">
		<column name="check_integration"></column>
		</property>
		
		<property name="loginTimeZone" type="java.lang.String">
		<column name="time_zone" read="AES_DECRYPT(time_zone, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"></column>
		</property>
		
		<property name="mobileNumber" type="java.lang.String">
		<column name="mobile_number" read="AES_DECRYPT(mobile_number, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"></column>
		</property>
		
		<property name="bloodGroup" type="java.lang.String">
		<column name="blood_group" read="AES_DECRYPT(blood_group, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"></column>
		</property>
		
		<property name="martailStatus" type="java.lang.String">
		<column name="martail_status" read="AES_DECRYPT(martail_status, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"></column>
		</property>
		
		<property name="patientConsent" type="character">
		<column name="patient_consent" ></column>
		</property>
		<property name="consentWithdrawnDate" type="date">
		<column name="consent_withdrawn_date"/>
		</property>
		<property name="pbmDrugHistoryDetailStatus">
		<column name="pbm_drug_history_detail_status"/>
		</property>
		<property name="pbmDrugHistoryResultStatus">
		<column name="pbm_drug_history_result_status"/>
		</property>
		<property name="ethnicity" type="java.lang.String">
		<column name="ethnicity" read="AES_DECRYPT(ethnicity, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"></column>
		</property>
		<property name="language" type="java.lang.String">
		<column name="language" read="AES_DECRYPT(language, 'akos')" 
					write="AES_ENCRYPT(?,'akos')"></column>
		</property>
	
		<!-- <many-to-one name="loginDetailId" class="com.clinakos.data.model.core.LoginSecurity" 
			fetch="join"> <column name="user_id" /> </many-to-one> -->
 		 <property name="isConnectedToDevices" type="boolean" access="field">
            <column name="is_connected_to_devices" />
        </property>
	</class>
</hibernate-mapping>