
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui" template="../templates/ui.xhtml">
<h:body onload="#{dashBoardManageBean.setoverviewindex()}">

	<f:view contentType="text/html">
		<h:head>
			<f:facet name="first">
				<meta http-equiv="X-UA-Compatible" content="EmulateIE8" />
				<meta content='text/html; charset=UTF-8' http-equiv="Content-Type" />
				<meta Http-Equiv="Cache-Control"
					content="no-cache, no-store, must-revalidate,max-age=0" />
				<meta Http-Equiv="Pragma" Content="no-cache" />
				<meta Http-Equiv="Expires" Content="-1" />
				<title><h:outputText value="#{msg.clinakos}" /></title>
			</f:facet>


			<link type="text/css" rel="stylesheet" href="../../CSS/style.css" />
			<link href="../../JavaScript/nv.d31.css" rel="stylesheet"
				type="text/css" />
			<style>
div.tooltip {
	position: absolute;
	text-align: center;
	width: 80px;
	height: 20px;
	padding: 2px;
	font: 12px sans-serif;
	background: trasparent;
	border: 0px;
	border-radius: 4px;
	color: #2AAAFF;
	font-weight: bold;
	/*  pointer-events: none;	This line needs to be removed */
}

.mypiechart {
	width: 300px;
	border: 2px;
}

.bar, .containerMedT {
	fill: #7cb5ec; /*
 #1aadce,#492970,#f28f43,#77a1e5,#c42525,#a6c96a #FF9999
  rgb(70,130,180) rgb(56,156,173); #ced29d", "#33CCCC", "#389CAD", "#f7aa47", "#416c85", "#36908a", "#C5B47F" */
}

.bar:hover {
	fill: #4682B4; /* rgb(4,180,180) rgb(0,128,192); #f08080 #416c85 */
/* steelblue; */
}

.sector {
	cursor: pointer;
}

.highcharts-tooltip span {
	height: auto;
	width: 200px;
	/* overflow: auto; */
	white-space: normal !important;
}
</style>
			<script type="text/javascript" src="../../JavaScript/jsapi.js"></script>
			<script type="text/javascript" src="../../JavaScript/d3.v2.js"></script>
			<script type="text/javascript" src="../../JavaScript/d3.v3.min.js"></script>
			<script type="text/javascript"
				src="../../JavaScript/highcharts_analytic.js"></script>
			<script type="text/javascript" src="../../JavaScript/exporting.js"></script>
			<script type="text/javascript"
				src="../../JavaScript/highcharts-more.js"></script>
			<script type="text/javascript"
				src="../../JavaScript/solid-gauge.src.js"></script>

			<script type="text/javascript" language="javascript">
			
			$(document).ready(function() {                      
   		      setTimeout(highchartsBackGroundLoading,1500);
		   // highchartsBackGroundLoading();
		      console.log("rendering other charts from bean");
			 });
    
			
			google.load('visualization', '1', {packages:['gauge']})  
			 	
	function renderOtherCharts(xhr,status,args){	      

		var orangeISize=args.numberofpatientformedactionplanforinitiationphase;
			/* #{userManageBean.numberofpatientformedactionplanforinitiationphase.size()};  */
    	var orangeMSize=args.numberofpatientformedactionplan;
    	/* 	#{userManageBean.numberofpatientformedactionplan.size()}; */
    	var higherISize= args.numberofpatientformedactionplanforhigherendofpatientforintiationphase;
    	/* 	#{userManageBean.numberofpatientformedactionplanforhigherendofpatientforintiationphase.size()}; */
    	var higherMSize= args.numberofpatientformedactionplanforhigherendofpatient;
    		/* #{userManageBean.numberofpatientformedactionplanforhigherendofpatient.size()};  */
    	var greenISize=args.numberOfPatientforanticoagclinicforintiationphase;
    	/* 	#{userManageBean.numberOfPatientforanticoagclinicforintiationphase.size()}; */
    	var greenMSize= args.numberOfPatientforanticoagclinic;
    		/* #{userManageBean.numberOfPatientforanticoagclinic.size()};  */
    	
    	if(orangeISize==0)
    		{
    		  if(orangeMSize==0)
    			  {
    			  if(higherISize==0)
    			  {
    				  if(higherMSize==0)
	    			  {
    					  if(greenISize==0)
		    			  {
    						  if(greenMSize==0)
			    			  {
    							  document.getElementById('containerAnticoagAnalysis').style.display="none";
    					    	 document.getElementById('containerAnticoagAnalysisDefault').style.display="block";
			    			  }
		    			  }
	    			  }
    			  }
    			  }		    		
    		} 
      //Chart for Anticaog analysis FFFF00 FFC90E FDC400 
      $('#containerAnticoagAnalysis').highcharts({
    	  
     colors: ['#FF0000','#FDC400','#008000'],
chart: {
    type: 'bar'
},
title: {
    text: ''
},
xAxis: {
    categories: ['Initiation', 'Maintenance']
},
yAxis: {
    min: 0,
    title: {
        text: ' '
    }
},
legend: {
    backgroundColor: '#FFFFFF',
    reversed: true
},
tooltip :{
	positioner: function () {
        return { x: 80, y: 70 };
    },        
	color:'#000'
},
navigation: {
    buttonOptions: {
        verticalAlign: 'top',
        y: -15
    }
},
plotOptions: {
    /* series: {
        stacking: 'normal'
    } */
    series: {
        stacking: 'normal',
        cursor: 'pointer',
        	point: {
                events: {
                    click: function() {
                    	displayAnticoagLevelPopUp(this.options.url);
                    	
                    }
                }
            }
    }
},
    series: [
        {
            name: 'Above Goal Range',
            //data: [#{userManageBean.numberofpatientformedactionplanforinitiationphase.size()}, #{userManageBean.numberofpatientformedactionplan.size()}]
            data: [
                   {y:orangeISize,
                    url:'hi'}
                   ,{y:orangeMSize,
                     url:'hm'}
               ]
        },
        {
            name: 'Below Goal Range',
            //data: [#{userManageBean.numberofpatientformedactionplanforhigherendofpatientforintiationphase.size()}, #{userManageBean.numberofpatientformedactionplanforhigherendofpatient.size()}]
            data: [
                   {y:higherISize,
                    url:'mi'}
                   ,{y: greenMSize,
                     url:'mm'}
               ]
        },
        {
    		name: 'In Goal Range',
    		//data: [#{userManageBean.numberOfPatientforanticoagclinicforintiationphase.size()}, #{userManageBean.numberOfPatientforanticoagclinic.size()}]
    		data: [
                   {y:greenISize,
                    url:'li'}
                   ,{y:higherMSize,
                     url:'lm'}
               ]
		}  
        ]
      });

 var litiumLow = args.numberofpatientforlithiumLow;
  var litiumMedium = args.numberofpatientforlithiumMedium;
  var litiumHigh = args.numberofpatientforlithiumHigh;
  console.log("lithium low size "+litiumLow);
  console.log("lithium medium size "+litiumMedium);
  console.log("lithium high size "+litiumHigh);
       if(litiumLow ==0)
           {
           if(litiumMedium==0)
               {
                if(litiumHigh==0)
                    {
                	document.getElementById('containerPsycoClinic').style.display="none";
			    	 document.getElementById('containerPsycoClinicDeafult').style.display="block";
                    }
               }
           }
  
      /*Psychoparm clinic status*/
        $('#containerPsycoClinic').highcharts({
        	colors: ['#FF0000','#FDC400','#008000'],
            chart: {
                type: 'bar'
            },
            title: {
                text: ''
            },
            xAxis: {
                categories: ['Li Level']
            },
            yAxis: {
                min: 0,
                title: {
                    text: ' '
                }
            },
            legend: {
                backgroundColor: '#FFFFFF',
                reversed: true
            },
            tooltip :{
            	//useHTML: true,
            
            	positioner: function () {
                    return { x: 60, y: 70 };
                },        
            	color:'#000'
            },
            navigation: {
                buttonOptions: {
                    verticalAlign: 'top',
                    y: -15
                }
            },
            plotOptions: {
                series: {
                    stacking: 'normal',
                    pointWidth: 20,
                    cursor: 'pointer',
                	point: {
                        events: {
                            click: function() {
                            	fnOpenLithiumPopUp(this.options.url);
                            	
                            }
                        }
                    }
                }
            },
                series: [{
                	
                name: 'Above Goal Range',
                data: [
						{y:litiumHigh,
                        url:'phi'}
                       /* ,{y:5,
                         url:'phm'} */
                   ]
                /* data: [6, 5] */
            }, {
                name: 'Below Goal Range',
                data: [
                       {y:litiumMedium,
                        url:'pmi'}
                       /* ,{y:4,
                         url:'pmm'} */
                   ]
               /*  data: [5, 4] */
            }, {
                name: 'In Goal Range',
                data: [
                       {y:litiumLow,
                        url:'pli'}
                       /* ,{y:6,
                         url:'plm'} */
                   ]
                /* data: [4, 6] */
            }]
        });

		        /*oncology clinic status*/
		         $('#containerOncoClinic').highcharts({
		    	  
		     colors: ['#FF0000','#FDC400','#008000'],
        chart: {
            type: 'bar'
        },
        title: {
            text: ''
        },
        xAxis: {
            categories: ['Temperature','ANC']
        },
        yAxis: {
            min: 0,
            title: {
                text: ' '
            }
        },
        legend: {
            backgroundColor: '#FFFFFF',
            reversed: true
        },
        tooltip :{
        	positioner: function () {
                return { x: 80, y: 70 };
            },        
        	color:'#000'
        },
        navigation: {
            buttonOptions: {
                verticalAlign: 'top',
                y: -15
            }
        },
        plotOptions: {
            /* series: {
                stacking: 'normal'
            } */
            series: {
                stacking: 'normal',
                cursor: 'pointer',
                	point: {
                        events: {
                            click: function() {
                            	displayOncolgyPopUp(this.options.url);
                            }
                        }
                    }
            }
        },
            series: [
                {
                    name: 'Above Goal Range',
                    //data: [#{userManageBean.numberofpatientformedactionplanforinitiationphase.size()}, #{userManageBean.numberofpatientformedactionplan.size()}]
                    data: [
                           {y:3,
                            url:'thi'}
                           ,{y:1,
                             url:'ahm'}
                       ]
                },
                {
                    name: 'Below Goal Range',
                    //data: [#{userManageBean.numberofpatientformedactionplanforhigherendofpatientforintiationphase.size()}, #{userManageBean.numberofpatientformedactionplanforhigherendofpatient.size()}]
                    data: [
                           {y:1,
                            url:'tmi'}
                           ,{y: 3,
                             url:'amm'}
                       ]
                },
                {
            		name: 'In Goal Range',
            		//data: [#{userManageBean.numberOfPatientforanticoagclinicforintiationphase.size()}, #{userManageBean.numberOfPatientforanticoagclinic.size()}]
            		data: [
                           {y:4,
                            url:'tli'}
                           ,{y:3,
                             url:'alm'}
                       ]
        		}  
                ]
		      });
		       /*  $('#containerOncoClinic').highcharts({
		        	colors: ['#FF0000','#FDC400','#008000'],
		            chart: {
		                type: 'bar'
		            },
		            title: {
		                text: ''
		            },
		            xAxis: {
		                categories: ['Temperature','Absol Neutrophil']
		            },
		            yAxis: {
		                min: 0,
		                title: {
		                    text: ' '
		                }
		            },
		            legend: {
		                backgroundColor: '#FFFFFF',
		                reversed: true
		            },
		            
		            plotOptions: {
		                series: {
		                    stacking: 'normal',
		                    pointWidth: 20,
		                    cursor: 'pointer',
		                	point: {
		                        events: {
		                            click: function() {
		                            	fnOpenLithiumPopUp(this.options.url);
		                            	
		                            }
		                        }
		                    }
		                }
		            },
		                series: [{
		                name: 'Above Goal Range',
		                data: [6, 3]
		            }, {
		                name: 'Below Goal Range',
		                data: [4,3]
		            }, {
		                name: 'In Goal Range',
		                data: [5,3]
		            }]
		        }); */
		        
		        
		        
		        
		        /*containerHepatitisClinic Status chart*/
		          $('#containerHepatitisClinic').highcharts({
		        	  colors: ['#FF0000','#FDC400','#008000'],
		            chart: {
		                type: 'bar'
		            },
		            title: {
		                text: ''
		            },
		           
		            xAxis: {
		                categories: ['Hgb']
		            },
		            yAxis: {
		                min: 0,
		                title: {
		                    text: ' '
		                }
		            },
		            legend: {
		                backgroundColor: '#FFFFFF',
		                reversed: true
		            },
		            tooltip :{
		            	//useHTML:true,
		            	positioner: function () {
		                    return { x: 60, y: 70 };
		                },        
		            	color:'#000'
		            },
		            navigation: {
		                buttonOptions: {
		                    verticalAlign: 'top',
		                    y: -15
		                }
		            },
		            plotOptions: {
		                series: {
		                    stacking: 'normal',
		                    pointWidth: 20,
		                    cursor: 'pointer',
		                	point: {
		                        events: {
		                            click: function() {
		                            	fnOpenTierPopUp(this.options.url);
		                            	
		                            }
		                        }
		                    }
		                }
		            },
		                series: [{
		                name: 'Above Goal Range',
		                data: [
	                           {y:6,
	                            url:'hhi'}
	                           
	                       ]
		                /* data: [3, 4] */
		            }, {
		                name: 'Below Goal Range',
		                data: [
	                           {y:4,
	                            url:'hmi'}
	                           
	                       ]
		                /* data: [4, 2] */
		            }, {
		                name: 'In Goal Range',
		                data: [
	                           {y:5,
	                            url:'hli'}
	                           
	                       ]
		                /* data: [5, 3] */
		            }]
		        });

		        
		          // Formulary Tier Pie
			   	  
			      var chart;
			      console.log("args 1 "+args.formularyChart);
			      valueforFormulary = args.formularyChart;

		        	 var barData =$.parseJSON(valueforFormulary);
		      
		      	   $.each(barData, function(index, value) {
		      	 //   	console.log("drugCategory "+this['DrugCategory']+"totalDrug"+this['totalDrug']);
		      	    	});
		      	   
		      	   //console.log("formulary chart====="+barData);
		      	   
		      	   var medCount_Array = new Array();
		      	   var forTier_Array = new Array();      	
		      	   var forTier_Array_New = new Array();
		      	  
		      	   for(var i in barData){
		      		   var medCount=barData[i].medicineId;
		      		 var forTier=barData[i].formulayTier;
		      		
		      		  console.log("forTier_Array================ "+forTier_Array+"    "+medCount_Array);
		      		forTier_Array_New.push([(forTier),(medCount)]);
		      		console.log("forTier_Array================ "+forTier_Array_New);
		      		 
		      	   }
		      	   
		      	 var len = forTier_Array_New.length;
		      		
		      	 if( len==0)
	         	{
	         	/*  alert(" value anand: "+len);  */
	         	 document.getElementById('containerFTPDefault').style.display="block";
	         	 document.getElementById('containerFTP').style.display="none";
	         	}
			          $(document).ready(function () {
			          	
			          	// Build the chart
			              $('#containerFTP').highcharts({
			                  chart: {
			                      plotBackgroundColor: null,
			                      plotBorderWidth: null,
			                      plotShadow: false
			                  },
			                  title: {
			                      text: ' '
			                  },
			                  tooltip: {
			              	    pointFormat: '<b>{point.percentage:.1f}%</b>'
			                  },
			                  plotOptions: {
			                      pie: {
			                          allowPointSelect: true,
			                          cursor: 'pointer',
			                          dataLabels: {
			                              enabled: false
			                          },
			                          showInLegend: true
			                      },
			                      series: {
			                          cursor: 'pointer',
			                          point: {
			                              events: {
			                                  click: function() {
			                                	 // displayAnticoagLevelPopUp(this.options.url);
			                                	 fnOpenTierPopUp(event.point.name);
			                                  }
			                              }
			                          }
			                      }
			                  },
			                  series: [{
			                      type: 'pie',
			                      name: 'Formulary Tier',
			                      data:  forTier_Array_New  //[{y:medCount_Array,name:forTier_Array,url:forTier_Array},{y:20,url:'tier2'},{y:30,url:'tier3'}]
			                      //data: [forTier_Array,medCount_Array]
			                  }]
			              });
			          }); 


			          
			        //clinic chart      
			           var chart;
			           valueOfClinics =args.clinicChartData;
			         
			          var clinicLen = valueOfClinics.length;
		               /*  cliniclen=0;  */
		                if(clinicLen==0)
		            	{
		            	/*  alert(" value anand: "+specialityDrugData); */
		            	 document.getElementById('containerClinicDefault').style.display="block";
		            	 document.getElementById('containerClinic').style.display="none";
		            	}
			          
			          var pieData =$.parseJSON(valueOfClinics);
			          
			         
				      	   $.each(pieData, function(index, value) {
				      	    	});  
	                var formulary_data_Json = new Array();
	                

	                for(var p in  pieData)
	                    {
	                    var clinic_Name = pieData[p].clinicName;
	                    var percentage = pieData[p].percentage;
	                    	formulary_data_Json.push([(clinic_Name),(percentage)]);
	                        console.log("final values "+formulary_data_Json);
	                    }
                    
			          $(document).ready(function () {
				          	
				          	// Build the chart
				              $('#containerClinic').highcharts({
				                  chart: {
				                      plotBackgroundColor: null,
				                      plotBorderWidth: null,
				                      plotShadow: false
				                  },
				                  title: {
				                      text: ' '
				                  },
				                  tooltip: {
				              	    pointFormat: '<b>{point.percentage:.1f}%</b>'
				                  },
				                  plotOptions: {
				                      pie: {
				                          allowPointSelect: true,
				                          cursor: 'pointer',
				                          dataLabels: {
				                              enabled: false
				                          },
				                          showInLegend: true
				                      }
				                  },
				                  series: [{
				                      type: 'pie',
				                      name: 'Clinic Master',
				                      data: formulary_data_Json
				                  }]
				              });
				          });  

			        //Chart for Med Taken
				    	/* $(document).ready(function(){*/
				    		
				        	datavalue = '#{reportManageBean.rptDrugCategoryBarList}';

				        	 var barData =$.parseJSON(datavalue);
				        	 var barDataLen=barData.length;
				        	 
				        	 if(barDataLen==0)
		                 	{
		                 	/*  alert(" value anand: "+specialityDrugData); */
		                 	 document.getElementById('containerMedTDefault').style.display="block";
		                 	 document.getElementById('containerMedT').style.display="none";
		                 	}
				        	 
				        //	 alert(datavalue);
				      	   $.each(barData, function(index, value) {
				      	 //   	console.log("drugCategory "+this['DrugCategory']+"totalDrug"+this['totalDrug']);
				      	    	});
				      
				      	 var processed_json = new Array();
				      	 for(var i in barData)
						 {
							console.log("json array drug categories  "+barData[i].DrugCategory);
							console.log("json array drug totalDrug  "+barData[i].totalDrug);
						 var drugCategories= barData[i].DrugCategory;
						// var newString = drugCategories.substring(0,drugCategories.indexOf(','))+"<br />"+drugCategories.substring(drugCategories.indexOf(',')+1,drugCategories.length);
						// console.log("new String ======= "+newString);
						 var totalDrugCount = barData[i].totalDrug;
						
						  processed_json.push([(drugCategories),(totalDrugCount)]);
						
						 }
				              
				        	console.log("printing json array data "+processed_json);
				    	    $('#containerMedT').highcharts({
				                chart: {
				                    type: 'column'
				                },
				                title: {
				                    text: ' '
				                },
				                subtitle: {
				                    text: ''
				                },
				                xAxis: {
				                    type: 'category',
				                    labels: {
				                        rotation: -45,
				                        formatter: function() {
				                            return(this.value.substring(0,8) + "...");
				                        },
				                        style: {
				                            fontSize: '10px',
				                            fontFamily: 'Verdana, sans-serif'
				                        }
				                    }
				                },
				                yAxis: {
				                    min: 0,
				                    title: {
				                        text: ''
				                           
				                    }
				                },
				                legend: {
				                    enabled: false
				                },
				                tooltip: {
				                	useHTML:true,
				                
				                	//pointFormat: 'Total Drug: <b>{point.y:.1f} </b>',
				                	
				                	 formatter: function() {
			                            //return "<div style='width: 400px; white-space:normal;'>"+this.point.name.substring(0,this.point.name.indexOf(',')+1)+'<br />'+this.point.name.substring(this.point.name.indexOf(',')+1,this.point.name.length)+'<br />'+'Drugs:'+'<b>'+ this.point.y+'.0</b>'+ "</div>";
			                            return  this.point.name +"<br/>"+'Total Medicines: '+'<b>'+ this.point.y+'</b>';
			                       } 
				                
				                    /* formatter: function() {
				                        /* return this.point.name.substring(0,this.point.name.indexOf(',')+1)+"<br />"+this.point.name.substring(this.point.name.indexOf(',')+1,this.point.name.length) +'<br/>' +
				                            
				                        'Drugs:'+'<b>'+ this.point.y+'.0</b>'; 
				                        
				                    	var words = this.point.name.split(/[\s]/);
				                        var numWordsPerLine = 4;
				                        var str = [];
										//alert(words);
				                        for (var word in words) {
				                            if (word > 0 &amp;&amp; word % numWordsPerLine == 0)
				                                str.push('<br/>');

				                             str.push(words[word]);
				                        }
										str.push("<br/>"+'Total Patients: '+'<b>'+ this.point.y+'.0</b>');
				                        return "<div style='width: 400px; white-space:normal;'>"+str.join(' ')+ "</div>";
				                    } */
				                },
				                
				                plotOptions: {
				                    column: {
				                        pointPadding: 0.2,
				                        borderWidth: 0,
				                        color:'#7CB5EC',
				                        cursor:'pointer'
				                        
				                    },
				                    series: {
					                    stacking: 'normal',
					                    cursor: 'pointer',
					                	point: {
					                        events: {
					                            click: function() {
					                            	fnshowDrugDetail(event.point.name);
					                            	
					                            }
					                        }
					                    }
					                }
				                },
				                series: [{
				                    name: '',
				                    data:processed_json, 
				                    
				                    dataLabels: {
				                        enabled: true,
				                        rotation: -90,
				                        color: '#FFFFFF',
				                        align: 'right',
				                        x: 4,
				                        y: 8,
				                        style: {
				                            fontSize: '9px',
				                            fontFamily: 'Verdana, sans-serif',
				                            textShadow: '0 0 3px black'
				                        }
				                    }
				                }]
				            });  




				    	    
				    	 // specialityDrug Pie 
				    	     var chart;
				    	     console.log("args 2::=======>"+args.specialityDrugData);
				    	     specialityDrugData=args.specialityDrugData;
		                   
		                    
		                    if(specialityDrugData==0)
		                    	{
		                    	/*  alert(" value anand: "+specialityDrugData); */
		                    	 document.getElementById('containerDTPDefault').style.display="block";
		                    	 document.getElementById('containerDTP').style.display="none";
		                    	}
		                    
		                          var drugTypeData = $.parseJSON(specialityDrugData);
		                      $.each(drugTypeData, function(index, value) {
		                    	 /*  console.log("drugtype:::::"+this[drugCategory]+"medcount:::::::::"+this[medCountForDrugCategory]); */
		         		      	    	});
		                         var specialityDrugData_json = new Array();
		                         for(var s in drugTypeData){
		                             console.log("drugtype:::::"+drugTypeData[s].drugCategory+"medcount:::::::::"+drugTypeData[s].medCountForDrugCategory);
		                             var drugtype = drugTypeData[s].drugCategory;
		                             var specialtyMedCount = drugTypeData[s].medCountForDrugCategory;
		                             specialityDrugData_json.push([(drugtype),(specialtyMedCount)]);
		                             }
		                         console.log("final specialityDrugData_json  "+specialityDrugData_json);
				    	     $(document).ready(function () {
				    	     	
				    	     	// Build the chart
				    	         $('#containerDTP').highcharts({
				    	             chart: {
				    	                 plotBackgroundColor: null,
				    	                 plotBorderWidth: null,
				    	                 plotShadow: false
				    	             },
				    	             title: {
				    	                 text: ' '
				    	             },
				    	             tooltip: {
				    	         	    pointFormat: '<b>{point.percentage:.1f}%</b>'
				    	             },
				    	             plotOptions: {
				    	                 pie: {
				    	                     allowPointSelect: true,
				    	                     cursor: 'pointer',
				    	                     dataLabels: {
				    	                         enabled: false
				    	                     },
				    	                     showInLegend: true
				    	                 },
						                    series: {
							                    stacking: 'normal',
							                    cursor: 'pointer',
							                	point: {
							                        events: {
							                            click: function() {
							                            	fnshowDrugDetailSpeciality(event.point.name);
							                            	
							                            }
							                        }
							                    }
							                }
				    	             },
				    	             series: [{
				    	                 type: 'pie',
				    	                 name: '',
				    	                 data: specialityDrugData_json
				    	                 /* [
				                                ['Speciality',   35.0],
				                                ['Generic',       26.8],
				                                {
				                                    name: 'Brand',
				                                    y: 22.8,
				                                    sliced: false,
				                                    selected: false
				                                }
				                            ] */
				    	             }]
				    	         });
				    	     });

				    	     //drug type
				    	     //var chart;
				    	     console.log("args 3::::"+args.drugCategoryChartData);
				    	     drugCategoryTypeData=args.drugCategoryData;
			                   

			                          var drugTypedetial = $.parseJSON(drugCategoryTypeData.replace(/\s+/g," "));
			                          
			                      $.each(drugTypedetial, function(index, value) {
			                    	   //console.log("drugtype:::::"+this[drugCategory]+"medcount:::::::::"+this[medCountForDrugCategory]); 
			         		      	    	});
			                         var drugTypeData_json = new Array();
			                         for(var i in drugTypedetial){
			                             console.log("drugtype:::::"+drugTypedetial[i].medicineCategory+"medcount:::::::::"+drugTypedetial[i].drugCountPerCategory);
			                             var drugtypedata = drugTypedetial[i].medicineCategory;
			                             var drugTypeMedCount = drugTypedetial[i].drugCountPerCategory;
			                             drugTypeData_json.push([(drugtypedata),(drugTypeMedCount)]);
			                             }
			                         console.log("final drugTypeData_json  "+drugTypeData_json);
			                         var drugListLen=drugTypeData_json.length;
				                        /*  drugListLen=0; */
				                          if(drugListLen==0)
				                     	{
				  	                     	//alert("drugType chart::::::::::");
				                        	  document.getElementById('containerDrugTypeDefault').style.display="block";
				                         	 document.getElementById('containerDrugType').style.display="none";
				                     	} 
			                         
					    	     $(document).ready(function () {
					    	     	
					    	     	// Build the chart
					    	         $('#containerDrugType').highcharts({
					    	             chart: {
					    	                 plotBackgroundColor: null,
					    	                 plotBorderWidth: null,
					    	                 plotShadow: false
					    	             },
					    	             title: {
					    	                 text: ' '
					    	             },
					    	             tooltip: {
					    	         	    pointFormat: '<b>{point.percentage:.1f}%</b>'
					    	             },
					    	             plotOptions: {
					    	                 pie: {
					    	                     allowPointSelect: true,
					    	                     cursor: 'pointer',
					    	                     dataLabels: {
					    	                         enabled: false
					    	                     },
					    	                     showInLegend: true
					    	                 }
					    	             },
					    	             series: [{
					    	                 type: 'pie',
					    	                 name: '',
					    	                 data: drugTypeData_json			    	            
					    	             }]
					    	         });
					    	     });


					    	  // Diagnosis chart
					    	   console.log("args 4=======>"+args.diagnosesData);
					    	 diagnosisValue= args.diagnosesData;
					    	 console.log("diagnoses chart data::=======>"+diagnosisValue);
                                     
					    	      var diagData = $.parseJSON(diagnosisValue.replace(/\s+/g," "));

					    	      var diaDataLen = diagData.length;
					    	      /* diaDataLen=0; */
					    	      if(diaDataLen==0)
			                  	{
			                  	/*  alert(" value anand: "+specialityDrugData); */
			                  	 document.getElementById('containerDefault').style.display="block";
			                  	 document.getElementById('container').style.display="none";
			                  	}

					    	      
					    	      
					    	      $.each(diagData, function(index,value){
					    	          });

					    	        var fetchingJsonData = new Array();

					    	        for(var j in diagData)
					    	            {
					    	        console.log("diagosisNames  "+diagData[j].diagnosesName);
					    	        console.log("noofpatients  "+diagData[j].noofpatients);
					    	            
					    	        var diagnosisNames= diagData[j].diagnosesName;
					    			
					    			 var totalPatients = diagData[j].noofpatients;
					    			/*  var newString = diagnosisNames.substring(0,diagnosisNames.indexOf(' '))+"<br />"+diagnosisNames.substring(diagnosisNames.indexOf(' '),
							    			 diagnosisNames.indexOf(' '))+"<br />"+diagnosisNames.substring(diagnosisNames.indexOf(' '),diagnosisNames.length);
			 */
					    	         fetchingJsonData.push([(diagnosisNames),(totalPatients)]);
					    	            }
					    	         console.log("chartdatalist  "+fetchingJsonData);
					    	         
					    	         
					    	         $('#container').highcharts({
					    	             chart: {
					    	                 type: 'column'
					    	             },
					    	             title: {
					    	                 text: ' '
					    	             },
					    	             subtitle: {
					    	                 text: ''
					    	             },
					    	             xAxis: {
					    	                 type: 'category',
					    	                 labels: {
					    	                     rotation: -45,
					    	                     formatter: function() {
							                            return(this.value.substring(0,8) + "...");
							                        },
					    	                     style: {
					    	                         fontSize: '10px',
					    	                         fontFamily: 'Verdana, sans-serif'
					    	                     }
					    	                 }
					    	             },
					    	             yAxis: {
					    	                 min: 0,
					    	                 title: {
					    	                     text: ''
					    	                        
					    	                 }
					    	             },
					    	             legend: {
					    	                 enabled: false
					    	             },
					    	             /* tooltip: {
					    	                 pointFormat: 'Total Patients: <b>{point.y} </b>',
					    	             }, */
					    	             tooltip: {
							                	useHTML:true,
							                	
							                	 formatter: function() {
						                            //return "<div style='width: 400px; white-space:normal;'>"+this.point.name.substring(0,this.point.name.indexOf(',')+1)+'<br />'+this.point.name.substring(this.point.name.indexOf(',')+1,this.point.name.length)+'<br />'+'Drugs:'+'<b>'+ this.point.y+'.0</b>'+ "</div>";
						                            return  this.point.name +"<br/>"+'Total Patients: '+'<b>'+ this.point.y+'</b>';
						                       } 				                
							                   
							                },
					    	             plotOptions: {
							                    column: {
							                        pointPadding: 0.2,
							                        borderWidth: 0,
							                        color:'#7CB5EC'
							                    }
							                },
					    	             series: [{
					    	                 name: '',
					    	                 data:fetchingJsonData, 
					    	                 
					    	                 dataLabels: {
					    	                     enabled: true,
					    	                     rotation: -90,
					    	                     color: '#FFFFFF',
					    	                     align: 'right',
					    	                     x: 4,
					    	                     y: 10,
					    	                     style: {
					    	                         fontSize: '9px',
					    	                         fontFamily: 'Verdana, sans-serif',
					    	                         textShadow: '0 0 3px black'
					    	                     }
					    	                 }
					    	             }]
					    	         });

					    	      // Heatmap for Gene and med
					    	     drugGenevalue= args.drugGeneChartDetails;
					    	     uniqueMedNames= args.uniqueMedName;
					    	     uniqueGeneNames= args.uniqueGeneName;
					    	     console.log("unique drug data "+uniqueMedNames+" "+uniqueGeneNames);
					    	    	//Parsing JSon data
					    	    	var uniqueDrugData=$.parseJSON(uniqueMedNames);
					    	    	var uniqueGeneData=$.parseJSON(uniqueGeneNames);
					    	    	
					    				
					    	    	var lendglist=uniqueDrugData.length;    	
					    	    	 if(lendglist==0)
					    	     	{
					    	     	/*  alert(" value anand: "+specialityDrugData); */
					    	     	 document.getElementById('containerHeatMapDefault').style.display="block";
					    	     	 document.getElementById('containerHeatMap').style.display="none";
					    	     	}
					    	    	     var dgData = $.parseJSON(drugGenevalue);
					    	    	     var testArray=[];
					    	    		console.log("jsone adata "+dgData);
					    	    		
					    	    		var lendgdlist=dgData.length;    	
					    	       	 if(lendgdlist==0)
					    	        	{
					    	        	/*  alert(" value anand: "+specialityDrugData); */
					    	        	 document.getElementById('containerHeatMapDefault').style.display="block";
					    	        	 document.getElementById('containerHeatMap').style.display="none";
					    	        	}	
					    	    		  $.each(dgData, function(index, value) {
					    	    	 	
					    	    		      	    	});
					    	    		//console.log("test array data "+testArray);
					    	    	     var genetype_Json= new Array();
					    	    	     var medName_Json = new Array();
					    	    	     var patCount_Json = new Array();
					    	    	     var totalPatient_Json = new Array();
					    	    	     var x_axisList=new Array();
					    	    	     var y_axisList=new Array();
					    	    	     var xy_axislist=new Array();

					    	    		var y_medName_Json=new Array();
					    	    		var x_genetype_Json=new Array();

					    	    	     for(var uniqueDrugName in uniqueDrugData){
					    	    	    	 y_medName_Json.push(uniqueDrugData[uniqueDrugName].medicineName);
					    	    	     }
					    	    	     for(var uniqueGeneName in uniqueGeneData){
					    	    	    	 x_genetype_Json.push(uniqueGeneData[uniqueGeneName].geneSymbol);
					    	    	     }

					    	    	     for(var drug_gene_intaraction in dgData)
					    	    	         {
					    	    	        var x_axis,y_axis,value;
					    	    	        var count=0,count1=0;
					    	    	        for(var drugName in uniqueDrugData)
					    	    	            {
					    	    	              //alert("first loop"+dgData[drug_gene_intaraction].medicineName+"uniqueDrugData[drugName].medicineName "+uniqueDrugData[drugName].medicineName);
					    	    	              if(dgData[drug_gene_intaraction].medicineName == uniqueDrugData[drugName].medicineName){
					    	    	            	  
					    	    	            	  y_axis=count;
					    	    	            	// alert("y "+y_axis)
					    	    	                  }
					    	    	              
					    	    	              count++;
					    	    	              //console.log("drug name "+uniqueDrugData[drugName].medicineName);
					    	    	            }
					    	    	        for(var geneName in uniqueGeneData)
					    	    	            {
					    	    	        	//var count=0;
					    	    	            if(dgData[drug_gene_intaraction].geneSymbol == uniqueGeneData[geneName].geneSymbol){
					    	    	                
					    	    	            	x_axis=count1;
					    	    	            	//alert("x "+x_axis)
					    	    	                }
					    	    	           
					    	    	            count1++;
					    	    	           // console.log("geneSymbol "+uniqueGeneData[geneName].geneSymbol);
					    	    	          }
					    	    	        /*  x_axisList.push([x_axis]);
					    	    	         y_axisList.push([y_axis]); */
					    	    	        totalPatient_Json.push([x_axis,y_axis,dgData[drug_gene_intaraction].patientCount]);
					    	    	        // var res = x_axis.concat(y_axis);
					    	    	         var res = x_axis +""+y_axis;
					    	    	        xy_axislist.push([res]);
					    	    	         }
					    	    	    //alert( xy_axislist.length +":::::"+xy_axislist[0]);



					    	    	    for(var x_axis=0 ; x_axis &lt; x_genetype_Json.length; x_axis++)
					    	    	        {
					    	    			 for(var y_axis=0; y_axis &lt; y_medName_Json.length; y_axis++)
					    	    				{
					    	    				//var checkForMatch=x_axis.concat(y_axis);
					    	    				 var checkForMatch = x_axis +""+y_axis;
					    	    				//alert(checkForMatch);
					    	    				var count=0;
					    	    				for(var check in xy_axislist )
					    	    					{
					    	    				
					    	    					if(xy_axislist[check]==checkForMatch)
					    	    						{
					    	    							count++;
					    	    							break;
					    	    						}
					    	    					}
					    	    				if(count == 0)
					    	    					{
					    	    					  totalPatient_Json.push([x_axis,y_axis,0]);
					    	    					}
					    	    				
					    	    				}
					    	    	        }
				    	    	        console.log("heatmap data:::::"+totalPatient_Json);
					    	    $('#containerHeatMap').highcharts({
					    	        
					    	        chart: {
					    	            type: 'heatmap',
					    	            marginTop: 10,
					    	            marginBottom: 30,           
					    	             plotShadow: true,
					    	             plotBorderWidth: 2,
					    	             plotBorderColor:'#7CB5EC',
					    	             borderColor:'#7CB5EC',
					    	             
					    	        },
					    	        plotOptions: {
					    	            series: {
						                    cursor: 'pointer',
					    	            	point:{
					    	                events: {
					    	                    click: function () {
					    	                      var x = this.x,
					    	                                y = this.y,					    	                                
					    	                                xcat = this.series.chart.xAxis[0].categories,
					    	                                ycat = this.series.chart.yAxis[0].categories;
					    	                              /*   alert(x+' '+y); */
					    	                     /*     alert(xcat[x]+' '+ycat[x]) ; */
					    	                       displayHeatMapPatientListPopUp(xcat[x],ycat[y]);
					    	                      /* alert(xcat[x]+' '+ycat[y]) ; */
					    	                      
					    	                    }
					    	                }
					    					}
					    	            }
					    	        },
					    	        title: {
					    	            text: ''
					    	        },

					    	        xAxis: {
					    	        	labels: {
					    	                rotation: -20,
					    	                 style: {
					    	                    fontSize: '9px',
					    	                } 
					    	            },
					    	            categories: x_genetype_Json
					    	               /*  ['VKORC1', 'CYP2D6', 'CYP2C19', 'CYP2C1', 'TPMT','SLCO1B1','HLA-B'] */
					    	        },

					    	        yAxis: {
					    	            categories:y_medName_Json,
					    	                /*  ['warfain', 'coumadin', 'accupril', 'ABC plus', 'apixaban','clopidogrel','Amitriptyline'], */
					    	            title: null
					    	        },

					    	        colorAxis: {
					    	            min: 0,
					    	            minColor: '#FFFFFF',
					    	            maxColor: '#B7DBF2'
					    	        },

					    	        legend: {
					    	            align: 'right',
					    	            layout: 'vertical',
					    	            margin: 0,
					    	            verticalAlign: 'top',
					    	            y: 25,
					    	            symbolHeight: 220
					    	        },

					    	        tooltip: {
					    	            formatter: function () {
					    	                return '<b>' + this.series.xAxis.categories[this.point.x] + '</b> - <b>' +'</b> <b>' + this.series.yAxis.categories[this.point.y] + '<b>: </b>'+
					    	                    this.point.value +  '</b>';
					    	            }
					    	        },

					    	        series: [{
					    	            name: 'Patient Per Gene Med',
					    	            borderWidth: 1,
					    	            borderColor:'#7CB5EC',
					    	            data: totalPatient_Json,
					    	                 /* [
					    	                   [0,0,10],[0,1,19],[0,2,8],[0,3,24],[0,4,127],[0,5,67],[0,6,10],
					    	                   [1,0,92],[1,1,58],[1,2,78],[1,3,117],[1,4,48],[1,5,92],[1,6,58],
					    	                   [2,0,35],[2,1,15],[2,2,123],[2,3,64],[2,4,52],[2,5,35],[2,6,15],
					    	                   [3,0,72],[3,1,132],[3,2,114],[3,3,19],[3,4,16],[3,5,72],[3,6,132],
					    	                   [4,0,38],[4,1,5],[4,2,8],[4,3,117],[4,4,115],[4,5,38],[4,6,5],
					    	                   [5,0,115],[5,1,123],[5,2,35],[5,3,15],[5,4,52],[5,5,35],[5,6,64],
					    	                   [6,0,142],[6,1,62],[6,2,104],[6,3,119],[6,4,16],[6,5,12],[6,6,112]
					    	                   ], */
					    	            dataLabels: {
					    	                enabled: true,
					    	                color: '#006',
					    	                style: {
					    	                    textShadow: 'none',
					    	                    HcTextStroke: null
					    	                }
					    	            }
					    	        }]

					    	    });

					    	    
					    	    //Chart for Insurance
					    			    	
					    			    		dataSetBar=args.insuranceChartData;
                                                 console.log("insuranceChartDaata::::"+dataSetBar);
					    			        	 var barData =$.parseJSON(dataSetBar);
					    			        	 var barDataLen=barData.length;
					    			        	 
					    			        	 if(barDataLen==0)
					    	                 	{
					    	                 	
					    	                 	 document.getElementById('chartDefault').style.display="block";
					    	                 	 document.getElementById('chart').style.display="none";
					    	                 	}
					    			        	 
					    			        //	 alert(datavalue);
					    			      	   $.each(barData, function(index, value) {
					    			      	 //   	console.log("drugCategory "+this['DrugCategory']+"totalDrug"+this['totalDrug']);
					    			      	    	});
					    			      
					    			      	 var processed_json = new Array();
					    			      	 for(var i in barData)
					    					 {
					    						console.log("json array company Name  "+barData[i].rangeName);
					    						console.log("json array company Value "+barData[i].countValue);
					    					 var companyName= barData[i].rangeName;
					    					
					    					 var totalPatientCount = barData[i].countValue;
					    					
					    					  processed_json.push([(companyName),(totalPatientCount)]);
					    					
					    					 }
					    			              
					    			        	console.log("printing json array data "+processed_json);
					    			    	    $('#chart').highcharts({
					    			                chart: {
					    			                    type: 'bar'
					    			                },
					    			                title: {
					    			                    text: ' '
					    			                },
					    			                subtitle: {
					    			                    text: ''
					    			                },
					    			                xAxis: {
					    			                    type: 'category',
					    			                    labels: {
					    			                        rotation: -360,
					    			                        formatter: function() {
					    			                            return(this.value.substring(0,10) + "...");
					    			                        },
					    			                        style: {
					    			                            fontSize: '10px',
					    			                            fontFamily: 'Verdana, sans-serif',
					    			                           
					    			                        }
					    			                    }
					    			                },
					    			                yAxis: {
					    			                    min: 0,
					    			                    title: {
					    			                        text: ''
					    			                           
					    			                    }
					    			                },
					    			                legend: {
					    			                    enabled: false
					    			                },
					    			                tooltip: {
					    			                	useHTML:true,
					    			                
					    			                	//pointFormat: 'Total Drug: <b>{point.y:.1f} </b>',
					    			                	
					    			                	 formatter: function() {
					    		                            //return "<div style='width: 400px; white-space:normal;'>"+this.point.name.substring(0,this.point.name.indexOf(',')+1)+'<br />'+this.point.name.substring(this.point.name.indexOf(',')+1,this.point.name.length)+'<br />'+'Drugs:'+'<b>'+ this.point.y+'.0</b>'+ "</div>";
					    		                            return  this.point.name +"<br/>"+'Total Patients: '+'<b>'+ this.point.y+'</b>';
					    		                       } 
					    			                
					    			                    
					    			                },
					    			                
					    			                plotOptions: {
					    			                    column: {
					    			                        pointPadding: 0.2,
					    			                        borderWidth: 0,
					    			                        color:'#7CB5EC'
					    			                    }
					    			                },
					    			                series: [{
					    			                	pointWidth: 18,
					    			                	name: '',
					    			                    data:processed_json, 
					    			                    color:'#7CB5EC',
					    			                    dataLabels: {
					    			                        enabled: true,
					    			                        rotation: -360,
					    			                        color: '#FFFFFF',
					    			                        align: 'right',
					    			                        x: -8,
					    			                        y: 3,
					    			                        style: {
					    			                            fontSize: '9px',
					    			                            fontFamily: 'Verdana, sans-serif',
					    			                            textShadow: '0 0 3px black'
					    			                        }
					    			                    }
					    			                }]
					    			            });
                                   
                                            //networkchart
					    			    	    valueForNetwork=args.networkworkChartData;
					    			    	    var networkData= $.parseJSON(valueForNetwork);
					    			    	    var networklen = networkData.length;
					    			    	    /* networklen=0; */
					    			    	    /* alert(networkData); */
					    			    	    if(networklen==0)
					    			    	    {
					    			    	    /*  alert(" value anand: "+specialityDrugData); */
					    			    	     document.getElementById('networkDefault').style.display="block";
					    			    	     document.getElementById('network').style.display="none";
					    			    	    }
					    			    	    //console.log("networkData====== "+networkData);

					    			    	    var patientIDArray = new Array();
					    			    	    var doctorNameArray = new Array();
					    			    	    var prescriberArray = new Array();
					    			    	    for(var i in networkData){
					    			    	    	var doctorName = networkData[i].doctor_name;
					    			    	    	var patientID = networkData[i].patient_id;
					    			    	    	var doctor_prescriptions = networkData[i].doctor_prescriptions;
					    			    	    	patientIDArray.push(patientID);
					    			    	    	doctorNameArray.push(doctorName);
					    			    	    	prescriberArray.push(doctor_prescriptions);
					    			    	    	console.log("------------------ "+doctorNameArray[i]+"++++++++++++++++++++++ "+patientIDArray[i]+"********* "+prescriberArray[i]);
					    			    	    	
					    			    	    }
					    			    	    //var sorted_arr = doctorNameArray.sort();
					    			    	     console.log(doctorNameArray);
					    			    	    var results = [];
					    			    	    for (var i = 0; i &lt; doctorNameArray.length ; i++) {
					    			    	        if (doctorNameArray[i + 1] != doctorNameArray[i]) {
					    			    	            results.push(doctorNameArray[i]);
					    			    	        }
					    			    	    } 
					    			    	    //alert(results);

					    			    	    		
					    			    	    for(var i in patientIDArray)
					    			    	    	{
					    			    	    	
					    			    	    	}
					    			    	    /* var tooltip = d3.select("body")
					    			    	    .data(patientIDArray)
					    			    	    .append("div")
					    			    	    .style("position", "absolute")
					    			    	    .style("z-index", "10")
					    			    	    .style("visibility", "hidden")
					    			    	    .text(function(d,i){return patientIDArray[i];}); */

					    			    	    var w = 400, h = 360;

					    			    	    var labelDistance = 0;

					    			    	    /* var vis = d3.select("#network").append("svg:svg").attr("width", w).attr("height", h); */

					    			    	    /* var vis = d3.select("#network").append("svg:svg")
					    			    	    .attr("width", w)
					    			    	    .attr("height", h); */

					    			    	    var vis = d3.select("#network")
					    			    	    .append("svg")
					    			    	    .attr("width", w)
					    			    	    .attr("height", h);

					    			    	      var div = d3.select("body")
					    			    	    .append("div")  // declare the tooltip div 
					    			    	    .attr("class", "tooltip")              // apply the 'tooltip' class
					    			    	    .style("opacity", 0);  
					    			    	     
					    			    	     

					    			    	    var nodes = [];
					    			    	    var labelAnchors = [];
					    			    	    var labelAnchorLinks = [];
					    			    	    var links = [];
					    			    	    //var new_nodes=[];
					    			    	    for(var i = 0; i &lt; doctorNameArray.length; i++) {
					    			    	    	if(doctorNameArray[i] != null)
					    			    	    		{
					    			    	    		var node = {
					    			    	    				label : "Dr " + doctorNameArray[i]
					    			    	    		 
					    			    	    			};
					    			    	    		//alert(doctorNameArray[i]);
					    			    	    		
					    			    	    	
					    			    	    	nodes.push(node);
					    			    	    	
					    			    	    	 labelAnchors.push({
					    			    	    		node : node
					    			    	    		
					    			    	    	});
					    			    	    	 
					    			    	    	 //console.log("labelAnchors========== "+labelAnchors.valueOf());
					    			    	    	labelAnchors.push({
					    			    	    		node : node
					    			    	    	}); 
					    			    	    	
					    			    	    		}
					    			    	    	/* new_nodes.push(nodes[i].label);
					    			    	    	var new_name=new_nodes[i]; */
					    			    	    	/*  console.log("nodes========== "+nodes[i].label+" patientIDArray "+patientIDArray[i]+" Dr " + doctorNameArray[i]);
					    			    	    	var node = vis.selectAll("g.node").data(nodes).enter().append("svg:g").attr("class", "node");
					    			    	    	node.append("svg:circle").attr("r", patientIDArray[i]).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);  */
					    			    	    	//console.log("labelAnchors1========== "+labelAnchors.valueOf());
					    			    	    };


					    			    	    for(var i = 0; i &lt; 1; i++) {
					    			    	    	for(var j = 0; j &lt;= nodes.length-1; j++) {
					    			    	    		//if(doctorNameArray[i] != doctorNameArray[i+1])
					    			    	    			links.push({
					    			    	    				source : i,
					    			    	    				target : j,
					    			    	    				weight : 1
					    			    	    			});		
					    			    	    		//console.log("i========= "+i+" j=============== "+j);
					    			    	    		//console.log("weight========= "+weight);
					    			    	    		labelAnchorLinks.push({
					    			    	    			source : j * 2,
					    			    	    			target : j * 2 + 1,
					    			    	    			weight : 2
					    			    	    		});	
					    			    	    	}
					    			    	    	
					    			    	    	//console.log("labelAnchorLinks========== "+labelAnchorLinks.valueOf());
					    			    	    };
					    			    	    //console.log("links========== "+links.length);
					    			    	    //console.log("labelAnchorLinks========== "+labelAnchorLinks.length);

					    			    	    var force = d3.layout.force().size([w, h]).nodes(nodes).links(links).gravity(1).linkDistance(50).charge(-3000).linkStrength(function(x) {
					    			    	    	return x.weight * 2
					    			    	    });


					    			    	    force.start();

					    			    	    var force2 = d3.layout.force().nodes(labelAnchors).links(labelAnchorLinks).gravity(0).linkDistance(0).linkStrength(8).charge(-100).size([w, h]);
					    			    	    force2.start();


					    			    	     //var node=[];
					    			    	     /* for(var key in nodes) {
					    			    	        var val = nodes[key];
					    			    	      alert("Key: "+key+" value:"+val);
					    			    	    } */
					    			    	    //var node = new Array();
					    			    	      /* for(var i=0;i &lt; nodes.length;i++){
					    			    	    	console.log("nodes length============= "+nodes[i].label);
					    			    	    	
					    			    	    	node = vis.selectAll("g.node").data(nodes[i].label).enter().append("svg:g").attr("class", "node");
					    			    	    	//alert(typeof(node));
					    			    	    }   */ 
					    			    	     /* var node = [];
					    			    	     for(var i=0;i &lt; 1;i++){
					    			    	    	 node = vis.selectAll("g.node").data(nodes).enter().append("svg:g").attr("class", "node");
					    			    	    	 //alert(typeof(nodes));
					    			    	    	 //node.append("svg:circle").attr("r", 2).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);  
					    			    	    }  */
					    			    	    //var node=[];

					    			    	    	//var node = vis.selectAll("g.node").data(nodes, function(d){return d;}).enter().append("svg:g").attr("class", "node");
					    			    	    	

					    			    	    //node.append("svg:circle").attr("r", function(patientIDArray) { return Math.ceil(patientIDArray/10); }).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);
					    			    	    // var node = [];
					    			    	    var patient_result = new Array();
					    			    	    var prescriber_result = new Array();
					    			    	    var new_nodes= [];
					    			    	    var new_name = 0;

					    			    	    var patient_max = 0;
					    			    	    var prescriber_max = 0;
					    			    	    var a = patientIDArray.length;
					    			    	    var b = prescriberArray.length;
					    			    	    for (counter=0;counter &lt; a;counter++)
					    			    	    {
					    			    	     if (patientIDArray[counter] > patient_max)
					    			    	     {
					    			    	    	 patient_max = patientIDArray[counter];
					    			    	     }
					    			    	    }
					    			    	    for (counter=0;counter &lt; b;counter++)
					    			    	    {
					    			    	     if (prescriberArray[counter] > prescriber_max)
					    			    	     {
					    			    	    	 prescriber_max = prescriberArray[counter];
					    			    	     }
					    			    	    }
					    			    	    console.log("   " +patient_max+"   "+prescriber_max);
					    			    	     for(var i=0;i &lt; 1;i++)
					    			    	    {
					    			    	     for(var j=0;j &lt; nodes.length;j++)
					    			    	     {
					    			    	    	 new_nodes.push(nodes[j].label);
					    			    	    	 console.log("new_nodes====== "+new_nodes[j]);
					    			    	    	 new_name=new_nodes[j];
					    			    	    	 console.log("new_name====== "+new_name);
					    			    	    	 //var node = vis.selectAll("g.node").data(nodes).enter().append("svg:g").attr("class", "node");
					    			    	    	 //alert(typeof(new_nodes)+node.length);
					    			    	    	 console.log("patient count+++++++++ "+patientIDArray[j]);
					    			    	    	  // var fixed=patientIDArray[i];
					    			    	    	   var patient_fixed=patient_max;
					    			    	    	   var prescriber_fixed=prescriber_max;
					    			    	    	   console.log("fixed============== "+prescriber_fixed);
					    			    	    	   patient_result.push(Math.ceil(10*(patientIDArray[j]/patient_fixed)));
					    			    	    	   //prescriber_result.push(Math.ceil(prescriberArray[j]/prescriber_fixed));
					    			    	    	  prescriber_result.push(prescriberArray[j]/prescriber_fixed);
					    			    	    	   
					    			    	    	  // result=Math.ceil(result);
					    			    	    	   console.log("Final count================ "+patient_result+"    "+prescriber_result);
					    			    	    	   //node = vis.selectAll("g.node").data(nodes[j]).enter().append("svg:g").attr("class", "node");
					    			    	    	   
					    			    	    		   //node.append("svg:circle").attr("r", result).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 0); 
					    			    	    	 //node.append("svg:circle").attr("r", 2).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);  
					    			    	    		   //alert(node.length);
					    			    	    	   
					    			    	    }
					    			    	    } 
					    			    	     console.log("patient_result================ "+patient_result);
					    			    	     
					    			    	     var link = vis.selectAll("line.link").data(links).enter().append("svg:line").attr("class", "link").style("stroke", "#000066").style("stroke-width", 
					    			    	    		 function(d,i){
					    			    	    	 		if(prescriber_result[i] == 0)
					    			    	    	 			{
					    			    	    	 			return 0.2;
					    			    	    	 			}
					    			    	    	 		else
					    			    	    	 			{
					    			    	    	 			return prescriber_result[i];
					    			    	    	 			}
					    			    	    	 			});
					    			    	     //var m=0;
					    			    	     //while(m &lt; nodes.length){
					    			    	    var node=vis.selectAll("g.node").data(force.nodes()).enter().append("svg:g").attr("class", "node")
					    			    	     	.append("svg:circle").attr("r", function(d,i){return patient_result[i];}).style("fill", "#7CB5EC").style("stroke", "#7CB5EC").style("stroke-width", .1)
					    			    	     	  .on("mouseover", function(d,i) {
					    			    	    	div.transition()
					    			    	    		.duration(100)
					    			    	    		.style("border",5)
					    			    	    		.style("opacity", .8);
					    			    	    	div.html(patientIDArray[i] + " patients")
					    			    	    		.style("left", (d3.event.pageX) + "px")
					    			    	    		.style("top", (d3.event.pageY - 28) + "px");
					    			    	    	}).on("mouseout", function(d) {
					    			    	            div.transition()
					    			    	            .duration(500)
					    			    	            .style("opacity", 0);
					    			    	    })  /* .on("mouseover", function(){return tooltip.style("visibility", "visible");})
					    			    	    .on("mousemove", function(){return tooltip.style("top", (event.pageY-10)+"px").style("left",(event.pageX+10)+"px");})
					    			    	    .on("mouseout", function(){return tooltip.style("visibility", "hidden");}) */; 
					    			    	     	//m++;
					    			    	     //}
					    			    	     	
					    			    	    //var count=;
					    			    	       for(var i=0;i &lt; 1;i++)
					    			    	    	{
					    			    	    	   for(var j=0;j &lt; nodes.length;j++)
					    			    	    		   {
					    			    	    		     /* console.log("patient count+++++++++ "+patientIDArray[j]);
					    			    	    		   var fixed=patientIDArray[i];
					    			    	    		   //console.log("fixed============== "+fixed);
					    			    	    		   result=10*(patientIDArray[j]/fixed);
					    			    	    		   var randomValues = Math.random(result);
					    			    	    		   //console.log(patientIDArray[j]);
					    			    	    		  // result=Math.ceil(result);
					    			    	    		   console.log("Final count================ "+result);
					    			    	    		   //node = vis.selectAll("g.node").data(nodes[j]).enter().append("svg:g").attr("class", "node");
					    			    	    		   
					    			    	    			   node.append("svg:circle").attr("r", result).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);   */
					    			    	    			   
					    			    	    		   
					    			    	    		   }
					    			    	    	  /* for(var j=0;j &lt;= i;j++)
					    			    	    		  { */
					    			    	    		  
					    			    	    		 // console.log("doctorNameArray.length========= "+nodes[i].label);
					    			    	    	 /* console.log("patient count+++++++++ "+patientIDArray[i]);
					    			    	    	 var count=patientIDArray[i];
					    			    	    	 
					    			    	    	 console.log("Final count================ "+result); */
					    			    	    	// count=count+10;
					    			    	    	// console.log(patientIDArray[i]);
					    			    	    	//if (doctorNameArray[i] == doctorNameArray[i+1]) {
					    			    	           	//console.log("inside for loop "+i);
					    			    	           // count++;
					    			    	          // alert(nodes);
					    			    	          //var name=nodes[i].label;
					    			    	          //new_nodes.push(name);
					    			    	         // console.log("new node ================= "+new_nodes[i]);
					    			    	           //console.log("nodes length============= "+nodes[i]+" "+name);
					    			    	           //new_name=new_nodes[i];
					    			    	           //console.log("new name================= "+new_name);
					    			    	         // var node = vis.selectAll("g.node").data(nodes).enter().append("svg:g").attr("class", "node");
					    			    	          
					    			    	           /* if (nodes[i].label == nodes[i+1].label) 
					    			    	    		{
					    			    	        	   					
					    			    	    			            	console.log("doctorNameArray "+doctorNameArray[i]+" "+doctorNameArray[i+1]);
					    			    	    			            	console.log("nodes length============= "+nodes[i]);
					    			    	    			            	count++;
					    			    	    			            	console.log("if count============== "+count);
					    			    	    			            	console.log("if node============== "+node);
					    			    	    			            	node.append("svg:circle").attr("r", count).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);
					    			    	    	   }
					    			    	           else  
					    			    	    		{ 
					    			    	        	   count = 1; 
					    			    	    		   console.log("else count============== "+count);
					    			    	    		   console.log("else node============== "+node);
					    			    	    		   node.append("svg:circle").attr("r", count).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);
					    			    	    		}  */
					    			    	    	/* } */
					    			    	           // count++;
					    			    	             /* node.append("svg:circle").attr("r", 
					    			    	            		 function(x) 
					    			    	    	        	 {
					    			    	    	            		var returnColor;
					    			    	    			            if (doctorNameArray[i] == doctorNameArray[i+1]) 
					    			    	    			            {
					    			    	    			            	console.log("doctorNameArray "+doctorNameArray[i]+" "+doctorNameArray[i+1]);
					    			    	    			            	count++;
					    			    	    			            	returnColor = count;
					    			    	    			            	console.log("if count============== "+count);
					    			    	    			            	console.log("if count returnColor============== "+returnColor+" "+i);
					    			    	    			            }
					    			    	    	           // if (x > 1) { returnColor = count; } 
					    			    	    	            		else  
					    			    	    	            		{ 
					    			    	    	            			returnColor = 1; 
					    			    	    	            			console.log("else count============== "+returnColor);
					    			    	    	            		} 
					    			    	                 			return returnColor;
					    			    	                	}).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3)
					    			    	            ;  */
					    			    	        // }
					    			    	    	// else
					    			    	    		//{
					    			    	    		 //console.log("doctorNameArray "+doctorNameArray[i]+" "+doctorNameArray[i+1]);
					    			    	    		//count=1;
					    			    	    		//node.append("svg:circle").attr("r", count).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);
					    			    	    		/* node.append("svg:circle").attr("r", function(x) {
					    			    	                var returnColor;
					    			    	                if (x === 1) { returnColor = count; } 
					    			    	                else  {  } 
					    			    	                 return returnColor;
					    			    	                }).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3)
					    			    	    		; */
					    			    	    		//console.log("else count============== "+count);
					    			    	    		//} 
					    			    	    	
					    			    	    	
					    			    	    	}   
					    			    	     node.call(force.drag);



					    			    	    var anchorLink = vis.selectAll("line.anchorLink").data(labelAnchorLinks)//.enter().append("svg:line").attr("class", "anchorLink").style("stroke", "#999");

					    			    	    var anchorNode = vis.selectAll("g.anchorNode").data(force2.nodes()).enter().append("svg:g").attr("class", "anchorNode");
					    			    	    anchorNode.append("svg:circle").attr("r", 0).style("fill", "#FFF");
					    			    	    	anchorNode.append("svg:text").text(function(d, i) {
					    			    	    	return i % 2 == 0 ? "" : d.node.label
					    			    	    }).style("fill", "#000066").style("font-family", "Arial").style("font-size", 12);

					    			    	    var updateLink = function() {
					    			    	    	this.attr("x1", function(d) {
					    			    	    		return d.source.x;
					    			    	    	}).attr("y1", function(d) {
					    			    	    		return d.source.y;
					    			    	    	}).attr("x2", function(d) {
					    			    	    		return d.target.x;
					    			    	    	}).attr("y2", function(d) {
					    			    	    		return d.target.y;
					    			    	    	});

					    			    	    }

					    			    	    var updateNode = function() {
					    			    	    	this.attr("transform", function(d) {
					    			    	    		return "translate(" + d.x + "," + d.y + ")";
					    			    	    	});

					    			    	    }


					    			    	    force.on("tick", function() {

					    			    	    	force2.start();

					    			    	    	node.call(updateNode);

					    			    	    	anchorNode.each(function(d, i) {
					    			    	    		if(i % 2 == 0) {
					    			    	    			d.x = d.node.x;
					    			    	    			d.y = d.node.y;
					    			    	    		} else {
					    			    	    			var b = this.childNodes[1].getBBox();

					    			    	    			var diffX = d.x - d.node.x;
					    			    	    			var diffY = d.y - d.node.y;

					    			    	    			var dist = Math.sqrt(diffX * diffX + diffY * diffY);

					    			    	    			var shiftX = b.width * (diffX - dist) / (dist * 2);
					    			    	    			shiftX = Math.max(-b.width, Math.min(0, shiftX));
					    			    	    			var shiftY = 5;
					    			    	    			this.childNodes[1].setAttribute("transform", "translate(" + shiftX + "," + shiftY + ")");
					    			    	    		}
					    			    	    	});


					    			    	    	anchorNode.call(updateNode);

					    			    	    	link.call(updateLink);
					    			    	    	anchorLink.call(updateLink);

					    			    	    });

					    			    	  //Comlaince  
					    				      	//Red Gauge
					    				      	/*  var valueGauge=#{userManageBean.meterGaugeModel.value};
					    				    var valueGauge1=valueGauge.toString(); */
					    				   /*  alert(valueGauge); */
					    	    var gaugeOptions = {
					    		
					    		    chart: {
					    		        type: 'solidgauge'
					    		    },
					    		    
					    		    title: null,
					    		    
					    		    pane: {
					    		    	center: ['50%', '85%'],
					    		    	size: '140%',
					    		        startAngle: -90,
					    		        endAngle: 90,
					    	            background: {
					    	                backgroundColor: '#EEE',
					    	                innerRadius: '60%',
					    	                outerRadius: '100%',
					    	                shape: 'arc'
					    	            }
					    		    },

					    		    tooltip: {
					    		    	enabled: false
					    		    },
					    		    navigation: {
					    		        buttonOptions: {
					    		            verticalAlign: 'top',
					    		            y: -15
					    		        }
					    		    },
					    		       
					    		    // the value axis
					    		    yAxis: {
					    		    	stops: [
					    						[0.0, '#FF0000'], // red
					    			            [0.6, '#FF0000'], // red
					    			            [0.6, '#FFA500'], // orange
					    			            [0.8, '#FFA500'], // orange
					    			            [0.8, '#008000'], //green
					    			            [1, '#008000'] //green
					    					],
					    				lineWidth: 0,
					    	            minorTickInterval: null,
					    	            tickPixelInterval: 400,
					    	            tickWidth: 0,
					    		        title: {
					    	                y: -70
					    		        },
					    	            labels: {
					    	                y: 16
					    	            }        
					    		    },
					    	        
					    	        plotOptions: {
					    	            solidgauge: {
					    	                dataLabels: {
					    	                    y: -30,
					    	                    borderWidth: 0,
					    	                    useHTML: true
					    	                }
					    	            }
					    	        }
					    	    };
					    	    
					    	    // The speed gauge
					    	    $('#containerComplaince').highcharts(Highcharts.merge(gaugeOptions, {
					    	        yAxis: {
					    		        min: 0,
					    		        max: 100,
					    		        title: {
					    		            text: ''
					    		        }       
					    		    },

					    		    credits: {
					    		    	enabled: false
					    		    },
					    		   
					    		    series: [{
					    		        name: '',
					    		        data: [0],
					    		        dataLabels: {
					    		        	format: '<div style="text-align:center"><span style="font-size:25px;color:' + 
					    	                    ('black') + '">{y}</span><br/>' + 
					    	                   	'</div>'
					    		        },
					    		        tooltip: {
					    		            valueSuffix: ' '
					    		        }
					    		    }]
					    		
					    		}));
					    	   
					    						  	                       
					    				    // Bring life to the dials
					    				    setInterval(function () {
					    				    var valueGauge=#{userManageBean.meterGaugeModel.value};
					    				    var valueGauge1=valueGauge.toString();
					    				  /*   alert(valueGauge);  */
					    				    /* if(valueGauge=="")
					    				    	{
					    				    	document.getElementById('containerComplaince').style.display="none";
					    				    	document.getElementById('containerComplainceDefault').style.display="block";
					    				    	document.getElementById('containerComplainceAnlysis').style.display="none";
					    				    	} */
					    				    	// Speed
					    				        var chart = $('#containerComplaince').highcharts();
					    				        if (chart) {
					    				            var point = chart.series[0].points[0];  
					    				            point.update(#{userManageBean.meterGaugeModel.value});
					    				        }
					    				    }, 1000);   
					    				    
					    				    
					    				 /* Start STAR Ratings Charts:Added on 27/Jan/2015 By Nagaraj  */
					    				 /*Start :D09 - High Risk Medication  */
					    				     var gaugeOptions = {
					    		
					    		    chart: {
					    		        type: 'solidgauge'
					    		    },
					    		    
					    		    title: null,
					    		    
					    		    pane: {
					    		    	center: ['50%', '85%'],
					    		    	size: '140%',
					    		        startAngle: -90,
					    		        endAngle: 90,
					    	            background: {
					    	                backgroundColor: '#EEE',
					    	                innerRadius: '60%',
					    	                outerRadius: '100%',
					    	                shape: 'arc'
					    	            }
					    		    },

					    		    tooltip: {
					    		    	enabled: false
					    		    },
					    		    navigation: {
					    		        buttonOptions: {
					    		            verticalAlign: 'top',
					    		            y: -15
					    		        }
					    		    },
					    		       
					    		    // the value axis
					    		    yAxis: {
					    		    	stops: [
					    						[0.0, '#FF0000'], // red
					    			            [0.6, '#FF0000'], // red
					    			            [0.6, '#FFA500'], // orange
					    			            [0.8, '#FFA500'], // orange
					    			            [0.8, '#008000'], //green
					    			            [1, '#008000'] //green
					    					],
					    				lineWidth: 0,
					    	            minorTickInterval: null,
					    	            tickPixelInterval: 400,
					    	            tickWidth: 0,
					    		        title: {
					    	                y: -70
					    		        },
					    	            labels: {
					    	                y: 16
					    	            }        
					    		    },
					    	        
					    	        plotOptions: {
					    	            solidgauge: {
					    	                dataLabels: {
					    	                    y: -30,
					    	                    borderWidth: 0,
					    	                    useHTML: true
					    	                }
					    	            }
					    	        }
					    	    };
					    	    
					    	    // The speed gauge
					    	    $('#containerD9HighRiskMedication').highcharts(Highcharts.merge(gaugeOptions, {
					    	        yAxis: {
					    		        min: 0,
					    		        max: 100,
					    		        title: {
					    		            text: ''
					    		        }       
					    		    },

					    		    credits: {
					    		    	enabled: false
					    		    },
					    		   
					    		    series: [{
					    		        name: '',
					    		        data: [0],
					    		        dataLabels: {
					    		        	format: '<div style="text-align:center"><span style="font-size:25px;color:' + 
					    	                    ('black') + '">{y}</span><br/>' + 
					    	                   	'</div>'
					    		        },
					    		        tooltip: {
					    		            valueSuffix: ' '
					    		        }
					    		    }]
					    		
					    		}));
					    	   
					    						  	                       
					    				    // Bring life to the dials
					    				    setInterval(function () {
					    				    var valueGauge=16;
					    				    var valueGauge1=valueGauge.toString();
					    				 
					    				        var chart = $('#containerD9HighRiskMedication').highcharts();
					    				        if (chart) {
					    				            var point = chart.series[0].points[0];  
					    				            point.update(valueGauge);
					    				        }
					    				    }, 1000);   
					    				 
					    				 
					    				    /*End  :D09 - High Risk Medication  */
					    				    
					    				    
					    				     /*Start :D10 - Diabetes Treatment  */
					    				     var gaugeOptions = {
					    		
					    		    chart: {
					    		        type: 'solidgauge'
					    		    },
					    		    
					    		    title: null,
					    		    
					    		    pane: {
					    		    	center: ['50%', '85%'],
					    		    	size: '140%',
					    		        startAngle: -90,
					    		        endAngle: 90,
					    	            background: {
					    	                backgroundColor: '#EEE',
					    	                innerRadius: '60%',
					    	                outerRadius: '100%',
					    	                shape: 'arc'
					    	            }
					    		    },

					    		    tooltip: {
					    		    	enabled: false
					    		    },
					    		    navigation: {
					    		        buttonOptions: {
					    		            verticalAlign: 'top',
					    		            y: -15
					    		        }
					    		    },
					    		       
					    		    // the value axis
					    		    yAxis: {
					    		    	stops: [
					    						[0.0, '#FF0000'], // red
					    			            [0.6, '#FF0000'], // red
					    			            [0.6, '#FFA500'], // orange
					    			            [0.8, '#FFA500'], // orange
					    			            [0.8, '#008000'], //green
					    			            [1, '#008000'] //green
					    					],
					    				lineWidth: 0,
					    	            minorTickInterval: null,
					    	            tickPixelInterval: 400,
					    	            tickWidth: 0,
					    		        title: {
					    	                y: -70
					    		        },
					    	            labels: {
					    	                y: 16
					    	            }        
					    		    },
					    	        
					    	        plotOptions: {
					    	            solidgauge: {
					    	                dataLabels: {
					    	                    y: -30,
					    	                    borderWidth: 0,
					    	                    useHTML: true
					    	                }
					    	            }
					    	        }
					    	    };
					    	    
					    	    // The speed gauge
					    	    $('#containerD10DiabetesTreatment').highcharts(Highcharts.merge(gaugeOptions, {
					    	        yAxis: {
					    		        min: 0,
					    		        max: 100,
					    		        title: {
					    		            text: ''
					    		        }       
					    		    },

					    		    credits: {
					    		    	enabled: false
					    		    },
					    		   
					    		    series: [{
					    		        name: '',
					    		        data: [0],
					    		        dataLabels: {
					    		        	format: '<div style="text-align:center"><span style="font-size:25px;color:' + 
					    	                    ('black') + '">{y}</span><br/>' + 
					    	                   	'</div>'
					    		        },
					    		        tooltip: {
					    		            valueSuffix: ' '
					    		        }
					    		    }]
					    		
					    		}));
					    	   
					    						  	                       
					    				    // Bring life to the dials
					    				    setInterval(function () {
					    				    var valueGauge=80;
					    				    var valueGauge1=valueGauge.toString();
					    				 
					    				        var chart = $('#containerD10DiabetesTreatment').highcharts();
					    				        if (chart) {
					    				            var point = chart.series[0].points[0];  
					    				            point.update(valueGauge);
					    				        }
					    				    }, 1000);   
					    				 
					    				 
					    				    /*End  :D10 - Diabetes Treatment  */
					    				    
					    				     /*Start :D11 - Medication Adherence for Diabetes Medications  */
					    				     var gaugeOptions = {
					    		
					    		    chart: {
					    		        type: 'solidgauge'
					    		    },
					    		    
					    		    title: null,
					    		    
					    		    pane: {
					    		    	center: ['50%', '85%'],
					    		    	size: '140%',
					    		        startAngle: -90,
					    		        endAngle: 90,
					    	            background: {
					    	                backgroundColor: '#EEE',
					    	                innerRadius: '60%',
					    	                outerRadius: '100%',
					    	                shape: 'arc'
					    	            }
					    		    },

					    		    tooltip: {
					    		    	enabled: false
					    		    },
					    		    navigation: {
					    		        buttonOptions: {
					    		            verticalAlign: 'top',
					    		            y: -15
					    		        }
					    		    },
					    		       
					    		    // the value axis
					    		    yAxis: {
					    		    	stops: [
					    						[0.0, '#FF0000'], // red
					    			            [0.6, '#FF0000'], // red
					    			            [0.6, '#FFA500'], // orange
					    			            [0.8, '#FFA500'], // orange
					    			            [0.8, '#008000'], //green
					    			            [1, '#008000'] //green
					    					],
					    				lineWidth: 0,
					    	            minorTickInterval: null,
					    	            tickPixelInterval: 400,
					    	            tickWidth: 0,
					    		        title: {
					    	                y: -70
					    		        },
					    	            labels: {
					    	                y: 16
					    	            }        
					    		    },
					    	        
					    	        plotOptions: {
					    	            solidgauge: {
					    	                dataLabels: {
					    	                    y: -30,
					    	                    borderWidth: 0,
					    	                    useHTML: true
					    	                }
					    	            }
					    	        }
					    	    };
					    	    
					    	    // The speed gauge
					    	    $('#containerD11DiabetesMedications').highcharts(Highcharts.merge(gaugeOptions, {
					    	        yAxis: {
					    		        min: 0,
					    		        max: 100,
					    		        title: {
					    		            text: ''
					    		        }       
					    		    },

					    		    credits: {
					    		    	enabled: false
					    		    },
					    		   
					    		    series: [{
					    		        name: '',
					    		        data: [0],
					    		        dataLabels: {
					    		        	format: '<div style="text-align:center"><span style="font-size:25px;color:' + 
					    	                    ('black') + '">{y}</span><br/>' + 
					    	                   	'</div>'
					    		        },
					    		        tooltip: {
					    		            valueSuffix: ' '
					    		        }
					    		    }]
					    		
					    		}));
					    	   
					    						  	                       
					    				    // Bring life to the dials
					    				    setInterval(function () {
					    				    var valueGauge=85;
					    				    var valueGauge1=valueGauge.toString();
					    				 
					    				        var chart = $('#containerD11DiabetesMedications').highcharts();
					    				        if (chart) {
					    				            var point = chart.series[0].points[0];  
					    				            point.update(valueGauge);
					    				        }
					    				    }, 1000);   
					    				 
					    				 
					    				    /*End  :D11 - Medication Adherence for Diabetes Medications  */
					    				    
					    				     /*Start :D12 - Medication Adherence for Hypertension (RAS antagonists)  */
					    				     var gaugeOptions = {
					    		
					    		    chart: {
					    		        type: 'solidgauge'
					    		    },
					    		    
					    		    title: null,
					    		    
					    		    pane: {
					    		    	center: ['50%', '85%'],
					    		    	size: '140%',
					    		        startAngle: -90,
					    		        endAngle: 90,
					    	            background: {
					    	                backgroundColor: '#EEE',
					    	                innerRadius: '60%',
					    	                outerRadius: '100%',
					    	                shape: 'arc'
					    	            }
					    		    },

					    		    tooltip: {
					    		    	enabled: false
					    		    },
					    		    navigation: {
					    		        buttonOptions: {
					    		            verticalAlign: 'top',
					    		            y: -15
					    		        }
					    		    },
					    		       
					    		    // the value axis
					    		    yAxis: {
					    		    	stops: [
					    						[0.0, '#FF0000'], // red
					    			            [0.6, '#FF0000'], // red
					    			            [0.6, '#FFA500'], // orange
					    			            [0.8, '#FFA500'], // orange
					    			            [0.8, '#008000'], //green
					    			            [1, '#008000'] //green
					    					],
					    				lineWidth: 0,
					    	            minorTickInterval: null,
					    	            tickPixelInterval: 400,
					    	            tickWidth: 0,
					    		        title: {
					    	                y: -70
					    		        },
					    	            labels: {
					    	                y: 16
					    	            }        
					    		    },
					    	        
					    	        plotOptions: {
					    	            solidgauge: {
					    	                dataLabels: {
					    	                    y: -30,
					    	                    borderWidth: 0,
					    	                    useHTML: true
					    	                }
					    	            }
					    	        }
					    	    };
					    	    
					    	    // The speed gauge
					    	    $('#containerD12Hypertension').highcharts(Highcharts.merge(gaugeOptions, {
					    	        yAxis: {
					    		        min: 0,
					    		        max: 100,
					    		        title: {
					    		            text: ''
					    		        }       
					    		    },

					    		    credits: {
					    		    	enabled: false
					    		    },
					    		   
					    		    series: [{
					    		        name: '',
					    		        data: [0],
					    		        dataLabels: {
					    		        	format: '<div style="text-align:center"><span style="font-size:25px;color:' + 
					    	                    ('black') + '">{y}</span><br/>' + 
					    	                   	'</div>'
					    		        },
					    		        tooltip: {
					    		            valueSuffix: ' '
					    		        }
					    		    }]
					    		
					    		}));
					    	   
					    						  	                       
					    				    // Bring life to the dials
					    				    setInterval(function () {
					    				    var valueGauge=45;
					    				    var valueGauge1=valueGauge.toString();
					    				 
					    				        var chart = $('#containerD12Hypertension').highcharts();
					    				        if (chart) {
					    				            var point = chart.series[0].points[0];  
					    				            point.update(valueGauge);
					    				        }
					    				    }, 1000);   
					    				 
					    				 
					    				    /*End  :D12 - Medication Adherence for Hypertension (RAS antagonists)  */
					    				    
					    				     /*Start :D13 - Medication Adherence for Cholesterol (Statins) */
					    				     var gaugeOptions = {
					    		
					    		    chart: {
					    		        type: 'solidgauge'
					    		    },
					    		    
					    		    title: null,
					    		    
					    		    pane: {
					    		    	center: ['50%', '85%'],
					    		    	size: '140%',
					    		        startAngle: -90,
					    		        endAngle: 90,
					    	            background: {
					    	                backgroundColor: '#EEE',
					    	                innerRadius: '60%',
					    	                outerRadius: '100%',
					    	                shape: 'arc'
					    	            }
					    		    },

					    		    tooltip: {
					    		    	enabled: false
					    		    },
					    		    navigation: {
					    		        buttonOptions: {
					    		            verticalAlign: 'top',
					    		            y: -15
					    		        }
					    		    },
					    		       
					    		    // the value axis
					    		    yAxis: {
					    		    	stops: [
					    						[0.0, '#FF0000'], // red
					    			            [0.6, '#FF0000'], // red
					    			            [0.6, '#FFA500'], // orange
					    			            [0.8, '#FFA500'], // orange
					    			            [0.8, '#008000'], //green
					    			            [1, '#008000'] //green
					    					],
					    				lineWidth: 0,
					    	            minorTickInterval: null,
					    	            tickPixelInterval: 400,
					    	            tickWidth: 0,
					    		        title: {
					    	                y: -70
					    		        },
					    	            labels: {
					    	                y: 16
					    	            }        
					    		    },
					    	        
					    	        plotOptions: {
					    	            solidgauge: {
					    	                dataLabels: {
					    	                    y: -30,
					    	                    borderWidth: 0,
					    	                    useHTML: true
					    	                }
					    	            }
					    	        }
					    	    };
					    	    
					    	    // The speed gauge
					    	    $('#containerD13Cholesterol').highcharts(Highcharts.merge(gaugeOptions, {
					    	        yAxis: {
					    		        min: 0,
					    		        max: 100,
					    		        title: {
					    		            text: ''
					    		        }       
					    		    },

					    		    credits: {
					    		    	enabled: false
					    		    },
					    		   
					    		    series: [{
					    		        name: '',
					    		        data: [0],
					    		        dataLabels: {
					    		        	format: '<div style="text-align:center"><span style="font-size:25px;color:' + 
					    	                    ('black') + '">{y}</span><br/>' + 
					    	                   	'</div>'
					    		        },
					    		        tooltip: {
					    		            valueSuffix: ' '
					    		        }
					    		    }]
					    		
					    		}));
					    	   
					    						  	                       
					    				    // Bring life to the dials
					    				    setInterval(function () {
					    				    var valueGauge=50;
					    				    var valueGauge1=valueGauge.toString();
					    				 
					    				        var chart = $('#containerD13Cholesterol').highcharts();
					    				        if (chart) {
					    				            var point = chart.series[0].points[0];  
					    				            point.update(valueGauge);
					    				        }
					    				    }, 1000);   
					    				 
					    				 
					    				    /*End  :D13 - Medication Adherence for Cholesterol (Statins)  */
					    				    
					    				 /*End STAR Ratings charts  */


					    				    <!-- aco meauser charts	 -->
					    					
					    				       //drawChart();
					    				        //alert(args.measure28+" "+args.measure14+" "+args.measure15);
   				                    var data = google.visualization.arrayToDataTable([
   				                             ['Label', 'Value'],
   				                             ['ACO 14', args.measure14],
   				          					 ['ACO 15', args.measure15],
   				           					 ['ACO 26', args.measure26],
   				          					 ['ACO 28', args.measure28],
   				          					 ['ACO 29', args.measure29],
   				          					 ['ACO 30', args.measure30],
   				          					 ['ACO 32', args.measure32],
   				          					 ['ACO 33', args.measure33],
   				          
   				        					 ]);
   				         
   				        				 var options = {
   				         				  redFrom: 80,  redTo:100,
   				         				  greenFrom: 00, greenTo: 60,
   				         				  yellowFrom:60, yellowTo: 80,
   				         				  minorTicks: 5
   				        				 };
											//alert(document.getElementById('smpleText').value);
   				        					var chartACO = new google.visualization.Gauge(document.getElementById('acoMeasure'));
   				        					// alert(this.data);
   				        					 chartACO.draw(data, options);
					    				    // alert("hiiiiii")			    			            
					    				    updatePateintAna(); 	
						    				      
				    	}
				    	
			
			
			function displayACOChart(args)
			{
				google.load('visualization', '1', {packages:['gauge']});
			      google.setOnLoadCallback(drawChart);
			      drawChart();
			      function drawChart() { 
			    	 
			        var data = google.visualization.arrayToDataTable([
								['Label', 'Value'],
							    ['ACO 14', args.measure14],
								 ['ACO 15', args.measure15],
									 ['ACO 26', args.measure26],
								 ['ACO 28', args.measure28],
								 ['ACO 29', args.measure29],
								 ['ACO 30', args.measure30],
								 ['ACO 32', args.measure32],
								 ['ACO 33', args.measure33],
			         
			        ]);

			        var options = {
			          
			          redFrom: 80,  redTo:100,
			          greenFrom: 00, greenTo: 60,
			          yellowFrom:60, yellowTo: 80,
			          minorTicks: 5
			        };

			        var chart = new google.visualization.Gauge(document.getElementById('acoMeasure'));
			        chart.draw(data, options);
			      }
			}

		 </script>
			<script type="text/javascript" language="javascript">
    
    //Function to show drug chart drill down pop up
    function fnshowDrugDetail(id)
    {

    	 /* alert(id);    */  	
    	//document.getElementById('frmMedTaken:outputDrugJSON').innerHTML = "";
    	document.getElementById('frmMedTaken:hiddenTexforMedT').value=id;
    	
		document.getElementById('frmMedTaken:hiddenbtnforMedT').click();
		
		showDrillDownChartforMed();
   /* 	alert(id);  */

    }
    
    function fnshowDrugDetailSpeciality(id)
    {

    	/*  alert(id+'dd');   */   	
    	 document.getElementById('frmMedSpvsnon:hiddenTexforSPMed').value=id;
     	
 		document.getElementById('frmMedSpvsnon:hiddenbtnforSPMed').click();
   /* 	alert(id);  */

    }
		   function noBack() {
			    window.location.hash="no-back-button";
				window.location.hash="Again-No-back-button";//again because google chrome don't insert first hash into history
				window.onhashchange=function(){window.location.hash="";}
		       }
		     
			 function customExtender() {
			    this.cfg.highlighter = {
			      useAxesFormatters: false,
			      tooltipAxes: 'x'
			    }
			  }
			 
			//function to display anticoag level pop up
				function displayAnticoagLevelPopUp(id)
				{
					//alert(id);
					
					document.getElementById('ddlValForm:hiddenTexforAnticoag').value=id;
					//var a=document.getElementById('ddlValForm:hiddenTexforAnticoag').value;
					document.getElementById('ddlValForm:hiddenbtnforAnticoag').click();
					
				} 
			
			 
				//function to display Oncolgy Clinic patient list pop up
					function displayOncolgyPopUp(id)
					{
						
						
						document.getElementById('ddlOncologyForm:hiddenTexforOncology').value=id;
						document.getElementById('ddlOncologyForm:hiddenbtnforOncology').click();
						/* alert(id); */
					} 
			 
			//Function to open dialog box for formulary
			function fnOpenTierPopUp(id)
			{  
				document.getElementById('ddlValFormFormulary:hiddenTexforFormulary').value=id;
				var a=document.getElementById('ddlValFormFormulary:hiddenTexforFormulary').value;
				document.getElementById('ddlValFormFormulary:hiddenbtnforFormulary').click();
			//alert(id);
			}
			//Function to open dialog box for Lithium
			function fnOpenLithiumPopUp(id)
			{  
				document.getElementById('lithiumForm:hiddenTexforLithium').value=id;
				document.getElementById('lithiumForm:hiddenbtnforLithium').click();
			//alert(id);
			}
			
			function formularyTierComplete(xhr, status, args){
				if(args.responseCompleted==true){
					
				console.log("inside if after executing bean method");
				window['dlg4PatientListVar'].show();
				}
			}

			function updatePateintAna(){
				document.getElementById('hiddenFromForPatient:hiddenButtonForPateintAna').click();
				}

			function fncompliance(string){
				//alert(string);
                   document.getElementById('complianceFrom:hiddenInputForComliance').value=string;
                   document.getElementById('complianceFrom:hiddenBtnForCompliance').click();
				}

		</script>


		</h:head>

		<p:blockUI id="blockDialog" widgetVar="blockUI"
			block=":measrueChartFrm">  
                               LOADING ...<br />
			<p:graphicImage value="./../../Images/ajax_loader.gif" width="40"
				height="40" />
		</p:blockUI>
		<!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>...for Top display>>>>>>>>>>>>>>>>>>>>>>>>>>>> -->
		<p:layout fullPage="true">
			<p:layoutUnit position="north" size="85" minSize="60">

				<ui:include src="../Doctor/doctorheader2.xhtml">
				</ui:include>
			</p:layoutUnit>

			<p:layoutUnit id="bottom" position="south" size="24">
				<ui:include src="../core/footer.xhtml"></ui:include>
			</p:layoutUnit>

			<p:layoutUnit id="left" position="west" size="0" closable="false"
				collapsible="true" minSize="0" style="border:none;">
				<ui:include src="doctor_profile_leftmenu.xhtml">
				</ui:include>
			</p:layoutUnit>

			<!-- >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>..top>>>>>>>>>>>>>>>>>>>>>>>>> -->
			<p:layoutUnit position="center">
				<h:form id="ddlFullInsuranceForm">
					<p:commandButton id="hiddenbtnforInsurancePatientFull"
						actionListener="#{userManageBean.getInsuranceDetailListBarFull}"
						update=":diag1" style="display: none"></p:commandButton>

				</h:form>

				<h:form id="ddlHeatMapForm">
					<p:commandButton id="hiddenbtnforHeatMapPatient"
						actionListener="#{dashBoardManageBean.fetchPatientListByDrugGene}"
						update=":diag1" style="display: none"></p:commandButton>
					<h:inputHidden id="hiddenTexforheatMapdrug"
						value="#{dashBoardManageBean.drugNameFromHeatMap}"></h:inputHidden>
					<h:inputHidden id="hiddenTexforheatMapgene"
						value="#{dashBoardManageBean.geneNameFromHeatMap}"></h:inputHidden>

				</h:form>

				<h:form id="ddlOncologyForm">
					<p:commandButton id="hiddenbtnforOncology"
						actionListener="#{dashBoardManageBean.fetchPatientByOncology}"
						update=":diag1" style="display: none"></p:commandButton>
					<h:inputHidden id="hiddenTexforOncology"
						value="#{dashBoardManageBean.levelValForOncology}"></h:inputHidden>
				</h:form>

				<h:form id="ddlValForm">
					<p:commandButton id="hiddenbtnforAnticoag"
						actionListener="#{dashBoardManageBean.fetchPatientByAnticoag}"
						update=":diag1" style="display: none"></p:commandButton>
					<h:inputHidden id="hiddenTexforAnticoag"
						value="#{dashBoardManageBean.levelVal}"></h:inputHidden>
				</h:form>
				<h:form id="ddlValFormFormulary">
					<p:commandButton id="hiddenbtnforFormulary"
						action="#{dashBoardManageBean.fetchPatientByFormulary}"
						style="display: none"
						oncomplete="formularyTierComplete(xhr, status, args)"></p:commandButton>
					<h:inputText id="hiddenTexforFormulary"
						value="#{dashBoardManageBean.levelVal4Formulary}"
						style="display:none"></h:inputText>
				</h:form>

				<h:form id="frmMedTaken">
					<!-- <p:remoteCommand id="rcMEDT" name="doAwesomeness" update="frmMedTaken:er5" action="#{reportManageBean.fetchDrugByCategoryChart}"  autoRun="true"  />  -->
					<p:commandButton id="hiddenbtnforMedT" style="display: none">
						<f:ajax event="click" immediate="true"
							listener="#{reportManageBean.fetchDrugByCategoryChart}"
							execute="hiddenbtnforMedT" render="frmMedTaken:outputDrugJSON" ></f:ajax>

						<!--  <p:ajax event="click" actionListener="#{reportManageBean.fetchDrugByCategoryChart}" update="outputDrugJSON" immediate="true"/> -->
					</p:commandButton>

					<h:inputText id="hiddenTexforMedT"
						value="#{reportManageBean.levelVal4DrugChart}"
						style="display:none"></h:inputText>

					<h:outputText id="outputDrugJSON"
						value="#{reportManageBean.rptMedByDrugCategoryBarList}"
						style="display:none">
					</h:outputText>
				</h:form>

				<h:form id="frmMedSpvsnon">
					<!-- <p:remoteCommand id="rcMEDT" name="doAwesomeness" update="frmMedTaken:er5" action="#{reportManageBean.fetchDrugByCategoryChart}"  autoRun="true"  />  -->
					<p:commandButton id="hiddenbtnforSPMed"
						actionListener="#{dashBoardManageBean.fetchPatientBySpeciality}"
						style="display: none">
						<!-- <f:ajax event="click"  immediate="true" listener="#{dashBoardManageBean.fetchPatientBySpeciality}" execute="hiddenbtnforSPMed" render="diagspvsnonsp1" ></f:ajax>  
   -->
						<!--  <p:ajax event="click" actionListener="#{reportManageBean.fetchDrugByCategoryChart}" update="outputDrugJSON" immediate="true"/> -->
					</p:commandButton>

					<h:inputText id="hiddenTexforSPMed"
						value="#{dashBoardManageBean.levelVal4SPVSNONSPDrugChart}"
						style="display:none"></h:inputText>

					<!-- <h:outputText id="outputDrugJSON" value="#{reportManageBean.rptMedByDrugCategoryBarList}" style="display:none"> </h:outputText> -->
				</h:form>

				<h:form id="lithiumForm">
					<p:commandButton id="hiddenbtnforLithium"
						actionListener="#{dashBoardManageBean.fetchPatientByLithium}"
						update=":diag2" style="display: none"></p:commandButton>
					<h:inputHidden id="hiddenTexforLithium"
						value="#{dashBoardManageBean.levelValForLithium}"></h:inputHidden>
				</h:form>

				<h:form id="complianceFrom">
					<h:inputHidden id="hiddenInputForComliance"
						value="#{dashBoardManageBean.selectedCompliancePart}" />
					<p:commandButton id="hiddenBtnForCompliance"
						actionListener="#{dashBoardManageBean.fetchPateintListForCompliance}"
						style="display: none" />
				</h:form>

				<h:form id="hiddenFromForPatient">
					<p:commandButton id="hiddenButtonForPateintAna"
						update=":pateintAnaLytics" style="display: none" />
				</h:form>
				<h:form>
					<p:remoteCommand name="highchartsBackGroundLoading" process="@this"
						actionListener="#{dashBoardManageBean.highchartsBackGroundLoading}"
						oncomplete="renderOtherCharts(xhr,status,args);" async="true" />
				</h:form>



				<table width="100%" cellpadding="4" cellspacing="4">
					<tr>
						<td valign="middle" width="30%"><h:form id="pateintAnaLytics">
								<table cellpadding="7" cellspacing="7" style="margin-left: 20px">
									<tr>
										<td style="min-width: 120px" valign="top">
											<table class="noticeBoard" cellpadding="0" cellspacing="0"
												width="120px">
												<tr>
													<td align="center"><img
														src="${request.contextPath}/Images/patientGroup.png"
														height="35px"> </img></td>
													<td class="numberBoard" style="width: 60px"><p:graphicImage
															value="./../../Images/grayProgressWheel.gif"
															rendered="#{userManageBean.numberOfPatientParticularProvider.size() eq null}"
															width="40" height="40" /> <h:outputText
															value=" #{userManageBean.numberOfPatientParticularProvider.size()}"
															style="color:#FFFFFF;font-weight:bolder;"></h:outputText>
													</td>
												</tr>
												<tr height="45px" style="padding-top: 5px">
													<td colspan="2" align="center"><h:outputText
															value=" Total Patients" style="color:#006;" /></td>
												</tr>
											</table> <!-- <h:outputText value=" #{msg.numberofPatientsunderPharmacotherapyManagement}" style="color:#006;"/>
					</td>
								<td style="background-color: #2F4F4F; width: 40px;height: 30px" align="center">
								   <h:outputText value=" #{userManageBean.numberOfPatientParticularProvider.size()} " style="color:#FFFFFF;font-weight:bolder;"></h:outputText> -->
										</td>
										<td style="min-width: 120px" valign="top">
											<table class="noticeBoard" cellpadding="0" cellspacing="0"
												width="120px">
												<tr>
													<td align="center"><img
														src="${request.contextPath}/Images/med.png" height="35px">
													</img></td>
													<td class="numberBoard" style="width: 60px"><p:graphicImage
															value="./../../Images/grayProgressWheel.gif"
															rendered="#{userManageBean.averageMedicine eq ''}"
															width="40" height="40" /> <h:outputText
															value="#{userManageBean.averageMedicine}" rendered="#{userManageBean.averageMedicine ne ''}"
															style="color:#FFFFFF;font-weight:bolder;"></h:outputText>


													</td>
												</tr>
												<tr height="45px" style="padding-top: 5px">
													<td colspan="2" align="center"><h:outputText
															value=" Average Med" style="color:#006;" /></td>
												</tr>
											</table>

										</td>
										<td style="min-width: 120px">
											<table class="noticeBoard" cellpadding="0" cellspacing="0"
												width="140px">
												<tr>
													<td align="center"><img
														src="${request.contextPath}/Images/doctor.png"
														height="35px"> </img></td>
													<td class="numberBoard" style="width: 60px"><p:graphicImage
															value="./../../Images/grayProgressWheel.gif"
															rendered="#{userManageBean.averagePhysicians eq ''}"
															width="40" height="40" /> <h:outputText
															value=" #{userManageBean.averagePhysicians}" rendered="#{userManageBean.averagePhysicians ne ''}"
															style="color:#FFFFFF;font-weight:bolder;"></h:outputText>
													</td>
												</tr>
												<tr height="45px" style="padding-top: 5px">
													<td colspan="2" align="center"><h:outputText
															value=" Average Physician" style="color:#006;" /></td>
												</tr>
											</table>
										</td>

									</tr>
								</table>

								<table cellpadding="8" cellspacing="8" style="margin-left: 20px">
									<!--  <tr height="10px"></tr>  -->
									<tr>
										<td style="min-width: 120px" valign="top">
											<table class="noticeBoard" cellpadding="0" cellspacing="0"
												width="210px">
												<tr>
													<td align="center"><img
														src="${request.contextPath}/Images/patientGroup.png"
														height="35px"> </img></td>
													<td class="numberBoard" style="width: 60px"><p:graphicImage
															value="./../../Images/grayProgressWheel.gif"
															rendered="#{reportManageBean.analyticsDetail.optimizedWithPharmecogenomics eq null}"
															width="40" height="40" /> <h:outputText
															value="#{reportManageBean.analyticsDetail.optimizedWithPharmecogenomics} %"
															rendered="#{reportManageBean.analyticsDetail.optimizedWithPharmecogenomics ne null}"
															style="color:#FFFFFF;font-weight:bolder;" /></td>
												</tr>
												<tr height="50px" style="padding-top: 5px">
													<td colspan="2" align="center"><h:outputText
															value="% can be optimized with pharmacogenomics"
															style="color:#006;" /></td>
												</tr>
											</table> <!-- <h:outputText value=" #{msg.numberofPatientsunderPharmacotherapyManagement}" style="color:#006;"/>
					</td>
								<td style="background-color: #2F4F4F; width: 40px;height: 30px" align="center">
								   <h:outputText value=" #{userManageBean.numberOfPatientParticularProvider.size()} " style="color:#FFFFFF;font-weight:bolder;"></h:outputText> -->
										</td>
										<td style="min-width: 120px">
											<table class="noticeBoard" cellpadding="0" cellspacing="0"
												width="180px">
												<tr>
													<td align="center"><img
														src="${request.contextPath}/Images/diagnoses.png"
														height="35px"> </img></td>
													<td class="numberBoard" style="width: 60px"><p:graphicImage
															value="./../../Images/grayProgressWheel.gif"
															rendered="#{userManageBean.averageDiagnoses eq ''}"
															width="40" height="40" /> <h:outputText
															value="#{userManageBean.averageDiagnoses} " rendered="#{userManageBean.averageDiagnoses ne ''}"
															style="color:#FFFFFF;font-weight:bolder;"></h:outputText>
													</td>
												</tr>
												<tr height="50px" style="padding-top: 5px">
													<td colspan="2" align="center"><h:outputText
															value=" Average Diagnoses" style="color:#006;" /></td>
												</tr>
											</table>

										</td>
									</tr>
								</table>
							</h:form></td>
						<td valign="top">
							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 195px;" class="secContentBorderH">
								<tr height="30px">
									<!-- style="background-color: #4682B4;"> -->
									<td class="secHeadPartH" colspan="2">
										#{msg.anticoagclinicstatus}</td>
								</tr>
								<tr class="secContentBorderH">
									<td width="10px"></td>
									<td>
										<!-- <ui:include src="AnticoagChart.xhtml"></ui:include>  -->
										<div id="containerAnticoagAnalysis"
											style="min-width: 250px; max-width: 300px; height: 170px; margin: 0 auto; display: table-cell; text-align: center; vertical-align: middle">
											<p:graphicImage value="./../../Images/grayProgressWheel.gif"
												width="40" height="40" />
										</div>
										<div id="containerAnticoagAnalysisDefault"
											style="display: none; text-align: center">No Records
											Available</div>
									</td>
								</tr>
							</table>
						</td>


						<!-- Psychopharm clinic Status -->
						<td valign="top">
							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 195px;" class="secContentBorderH">
								<tr height="30px">
									<!-- style="background-color: #4682B4;"> -->
									<td class="secHeadPartH" colspan="2">
										#{msg.psycopharclinicstatus}</td>
								</tr>
								<tr class="secContentBorderH">
									<td width="10px"></td>
									<td>
										<!-- <ui:include src="AnticoagChart.xhtml"></ui:include>  -->
										<div id="containerPsycoClinic"
											style="min-width: 250px; max-width: 300px; height: 170px; margin: 0 auto; display: table-cell; text-align: center; vertical-align: middle">
											<p:graphicImage value="./../../Images/grayProgressWheel.gif"
												width="40" height="40" />
										</div>
										<div id="containerPsycoClinicDeafult"
											style="display: none; text-align: center">No Records
											Available</div>
									</td>
								</tr>
							</table>
						</td>

						<!-- Hepatitis clinic Status -->
						<td valign="top">
							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 195px;" class="secContentBorderH">
								<tr height="30px">
									<!-- style="background-color: #4682B4;"> -->
									<td class="secHeadPartH" colspan="2">
										#{msg.hepatitisclinicstatus}</td>
								</tr>
								<tr class="secContentBorderH">
									<td width="10px"></td>
									<td>
										<!-- <ui:include src="AnticoagChart.xhtml"></ui:include>  -->
										<div id="containerHepatitisClinic"
											style="min-width: 250px; max-width: 300px; height: 170px; margin: 0 auto; display: table-cell; text-align: center; vertical-align: middle">
											<p:graphicImage value="./../../Images/grayProgressWheel.gif"
												width="40" height="40" />
										</div>
									</td>
								</tr>
							</table>
						</td>

					</tr>
				</table>

				<!-- Chart area -->
				<table width="100%" style="margin-top: 5px;" cellpadding="4"
					cellspacing="4">
					<tr>
						<td valign="top">
							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 252px; min-width: 220px"
								class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH" colspan="2">Oncology Clinic
										Status</td>
								</tr>
								<tr class="secContentBorderH">

									<!-- <td width="10px"></td> -->
									<td align="center">

										<div id="containerOncoClinic"
											style="min-width: 250px; max-width: 300px; height: 170px; margin: 0 auto; display: table-cell; text-align: center; vertical-align: middle">
											<p:graphicImage value="./../../Images/grayProgressWheel.gif"
												width="40" height="40" />
										</div>
									</td>

								</tr>
							</table>
						</td>


						<!-- Complaince meter chart -->
						<td valign="top">
							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 252px; min-width: 220px"
								class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH" colspan="2">Compliance Meter</td>
								</tr>
								<tr class="secContentBorderH">

									<!-- <td width="10px"></td> -->
									<td align="center"><span id="containerComplaince"
										style="width: 175px; height: 122px; margin: 0 auto"> <p:graphicImage
												value="./../../Images/grayProgressWheel.gif" width="40"
												height="40" />
									</span>
										<div id="containerComplainceDefault"
											style="display: none; text-align: center">No Records
											Available</div>
										<div id="containerComplainceAnlysis"
											style="background-color: #FFFFFF">
											<table style="font-size: 12px;">
												<tr>
													<td id="greenID"
														style="background-color: GREEN; width: 60px; text-align: center; color: #FFFFFF; cursor: pointer;"
														onclick="fncompliance('green');"
														title="Compliance Percentage above 80 and Total Patients : #{userManageBean.noOfGreenSymbolPatient}">
														<h:outputText
															value="#{userManageBean.noOfGreenSymbolPatient}" />
													</td>
													<td
														style="background-color: ORANGE; width: 60px; text-align: center; color: #FFFFFF;"
														onclick="fncompliance('amber');"
														title="Compliance Percentage between 60-80 and Total Patients : #{userManageBean.noOfOrangeSymbolPatient}">
														<h:outputText
															value="#{userManageBean.noOfOrangeSymbolPatient}" />
													</td>
													<td
														style="background-color: RED; width: 60px; text-align: center; color: #FFFFFF;"
														onclick="fncompliance('red');"
														title="Compliance Percentage between 0-60 and Total Patients : #{userManageBean.noOfRedSymbolPatient}">
														<h:outputText
															value="#{userManageBean.noOfRedSymbolPatient}" />
													</td>
												</tr>
												<tr height="10px"></tr>
											</table>
										</div></td>

								</tr>
							</table>
						</td>

						<!-- Drug chart -->
						<td valign="top">
							<!-- <fieldset style="min-width:350px;height:270px;" class="fieldContent">
					  <legend class="titleBar">Compliance Meter</legend> -->

							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 252px" class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH">#{msg.drugs}</td>
								</tr>
								<tr class="secContentBorderH">
									<td align="center">
										<div id="containerMedT"
											style="width: 340px; height: 200px; display: table-cell; text-align: center; vertical-align: middle">
											<p:graphicImage value="./../../Images/grayProgressWheel.gif"
												width="40" height="40" />
										</div>
										<div id="containerMedTDefault"
											style="display: none; text-align: center">No Records
											Available</div>
									</td>
								</tr>

							</table> <!-- </fieldset> -->
						</td>


						<td valign="top">
							<!-- <fieldset style="height:330px;" class="fieldContent">
					  	<legend class="titleBar">Diagnoses</legend> -->
							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 252px" class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH">Diagnoses</td>
								</tr>
								<tr class="secContentBorderH">
									<td align="center">
										<div id="container"
											style="width: 240px; height: 200px; display: table-cell; text-align: center; vertical-align: middle">
											<p:graphicImage value="./../../Images/grayProgressWheel.gif"
												width="40" height="40" />
										</div>
										<div id="containerDefault"
											style="display: none; text-align: center">No Records
											Available</div>
									</td>
								</tr>

							</table> <!-- <div id="container" style="width: 330px; height: 300px;  float: left"></div> 
		   				</fieldset> -->
						</td>

					</tr>
				</table>
				
				<!-- STAR Ratings:start Added By Nagaraj on 27/Jan/2015 as per #1089  -->
		
				<table width="100%" cellpadding="3" cellspacing="3" class="secContentBorderH">
				
					<tr align="center"  >
					<td class="secHeadPartH"  colspan="5">STAR Ratings</td>
					
					</tr>
				<tr class="secContentBorderH">
				
					
				<!-- Start : D09 - High Risk Medication -->
					<td valign="top">
							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 252px; min-width: 220px"
								class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH" colspan="2">D09 - High Risk Medication</td>
								</tr>
								<tr class="secContentBorderH">

									<!-- <td width="10px"></td> -->
									<td align="center">
										<span id="containerD9HighRiskMedication"
										style="width: 175px; height: 122px; margin: 0 auto"> <p:graphicImage
												value="./../../Images/grayProgressWheel.gif" width="40"
												height="40" />
									</span>
										
										<div id="d9HighRiskMedicationAnlysis"
											style="background-color: #FFFFFF">
											<table style="font-size: 12px;">
												<tr>
													<td id="greenID"
														style="background-color: GREEN; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="0" />
													</td>
													<td
														style="background-color: ORANGE; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="0" />
													</td>
													<td
														style="background-color: RED; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="1" />
													</td>
												</tr>
												<tr height="10px"></tr>
											</table>
										</div>
									</td>

								</tr>
							</table>
						</td>
				<!-- End : D09 - High Risk Medication -->
				
				<!-- Start : D10 - Diabetes Treatment -->
					<td valign="top">
							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 252px; min-width: 220px"
								class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH" colspan="2">D10 - Diabetes Treatment</td>
								</tr>
								<tr class="secContentBorderH">

									<!-- <td width="10px"></td> -->
									<td align="center">

								
										<span id="containerD10DiabetesTreatment"
										style="width: 175px; height: 122px; margin: 0 auto"> <p:graphicImage
												value="./../../Images/grayProgressWheel.gif" width="40"
												height="40" />
										</span>
										<div id="d10DiabetesTreatmentAnlysis"
											style="background-color: #FFFFFF">
											<table style="font-size: 12px;">
												<tr>
													<td id="greenID"
														style="background-color: GREEN; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="0" />
													</td>
													<td
														style="background-color: ORANGE; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="3" />
													</td>
													<td
														style="background-color: RED; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="0" />
													</td>
												</tr>
												<tr height="10px"></tr>
											</table>
										</div>
									</td>

								</tr>
							</table>
						</td>
				<!-- End : D10 - Diabetes Treatment -->
				
					<!-- Start : D11 - Medication Adherence for Diabetes Medications -->
					<td valign="top">
							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 252px; min-width: 220px"
								class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH" colspan="2">D11 - Medication Adherence for Diabetes Medications</td>
								</tr>
								<tr class="secContentBorderH">

									<!-- <td width="10px"></td> -->
									<td align="center">

										<span id="containerD11DiabetesMedications"
										style="width: 175px; height: 122px; margin: 0 auto"> <p:graphicImage
												value="./../../Images/grayProgressWheel.gif" width="40"
												height="40" />
										</span>
										
										<div id="d11DiabetesMedicationsAnlysis"
											style="background-color: #FFFFFF">
											<table style="font-size: 12px;">
												<tr>
													<td id="greenID"
														style="background-color: GREEN; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="3" />
													</td>
													<td
														style="background-color: ORANGE; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="0" />
													</td>
													<td
														style="background-color: RED; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="0" />
													</td>
												</tr>
												<tr height="10px"></tr>
											</table>
										</div>
									</td>

								</tr>
							</table>
						</td>
				<!-- End : D11 - Medication Adherence for Diabetes Medications -->
				
				<!-- Start : D12 - Medication Adherence for Hypertension (RAS antagonists) -->
					<td valign="top">
							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 252px; min-width: 220px"
								class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH" colspan="2">D12 - Medication Adherence for Hypertension (RAS antagonists)</td>
								</tr>
								<tr class="secContentBorderH">

									<!-- <td width="10px"></td> -->
									<td align="center">
										
										<span id="containerD12Hypertension"
										style="width: 175px; height: 122px; margin: 0 auto"> <p:graphicImage
												value="./../../Images/grayProgressWheel.gif" width="40"
												height="40" />
										</span>
										
										<div id="d12HypertensionAnlysis"
											style="background-color: #FFFFFF">
											<table style="font-size: 12px;">
												<tr>
													<td id="greenID"
														style="background-color: GREEN; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="0" />
													</td>
													<td
														style="background-color: ORANGE; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="0" />
													</td>
													<td
														style="background-color: RED; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="1" />
													</td>
												</tr>
												<tr height="10px"></tr>
											</table>
										</div>
										
									</td>

								</tr>
							</table>
						</td>
				<!-- End : D12 - Medication Adherence for Hypertension (RAS antagonists) -->
				
				<!-- Start : D13 - Medication Adherence for Cholesterol (Statins) -->
					<td valign="top">
							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 252px; min-width: 220px"
								class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH" colspan="2">D13 - Medication Adherence for Cholesterol (Statins)</td>
								</tr>
								<tr class="secContentBorderH">

									<!-- <td width="10px"></td> -->
									<td align="center">

											<span id="containerD13Cholesterol"
										style="width: 175px; height: 122px; margin: 0 auto"> <p:graphicImage
												value="./../../Images/grayProgressWheel.gif" width="40"
												height="40" />
										</span>
										
										<div id="d13CholesterolAnlysis"
											style="background-color: #FFFFFF">
											<table style="font-size: 12px;">
												<tr>
													<td id="greenID"
														style="background-color: GREEN; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="0" />
													</td>
													<td
														style="background-color: ORANGE; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="0" />
													</td>
													<td
														style="background-color: RED; width: 60px; text-align: center; color: #FFFFFF;"
														>
														<h:outputText
															value="2" />
													</td>
												</tr>
												<tr height="10px"></tr>
											</table>
										</div>
									</td>

								</tr>
							</table>
						</td>
				<!-- End : D13 - Medication Adherence for Cholesterol (Statins) -->
				
				</tr>
				
				</table>
				
				<!-- STAR Ratings:end -->
				
				<table width="100%" cellpadding="3" cellspacing="3">
					<tr>
						<td valign="top">
							<!-- <fieldset style="min-width:400px;min-height:270px;" class="fieldContent">
					  <legend class="titleBar">Clinics</legend>
					 <center> -->
							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 252px" class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH">Clinics</td>
								</tr>
								<tr class="secContentBorderH">
									<td align="center"><span id="containerClinic"
										style="width: 340px; height: 220px; margin: 0 auto; display: table-cell; text-align: center; vertical-align: middle">
											<p:graphicImage value="./../../Images/grayProgressWheel.gif"
												width="40" height="40" />
									</span>
										<div id="containerClinicDefault"
											style="display: none; text-align: center">No Records
											Available</div></td>
								</tr>
							</table>
						</td>

						<td valign="top" align="right">

							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 252px; min-width: 200px"
								class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH">Formulary</td>
								</tr>
								<tr class="secContentBorderH">
									<td align="center">
										<div id="containerFTP"
											style="width: 240px; height: 220px; margin: 0 auto; display: table-cell; text-align: center; vertical-align: middle">
											<p:graphicImage value="./../../Images/grayProgressWheel.gif"
												width="40" height="40" />
										</div>
										<div id="containerFTPDefault"
											style="display: none; text-align: center">No Records
											Available</div>
									</td>
								</tr>

							</table>
						</td>

						<td valign="top">
							<!-- <fieldset style="height:330px;" class="fieldContent">
					  	<legend class="titleBar">Diagnoses</legend> -->
							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 252px" class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH">Drug Type</td>
								</tr>
								<tr class="secContentBorderH">
									<td align="center">
										<div id="containerDrugType"
											style="width: 300px; height: 200px; display: table-cell; text-align: center; vertical-align: middle">
											<p:graphicImage value="./../../Images/grayProgressWheel.gif"
												width="40" height="40" />
										</div>
										<div id="containerDrugTypeDefault"
											style="display: none; text-align: center">No Records
											Available</div>

									</td>
								</tr>

							</table> <!-- <div id="container" style="width: 330px; height: 300px;  float: left"></div> 
		   				</fieldset> -->
						</td>

						<td valign="top">
							<!-- <fieldset style="height:330px;" class="fieldContent">
					  		<legend class="titleBar">Drug Type</legend> -->
							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 252px" class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH">Specialty vs Non-Specialty</td>
								</tr>
								<tr class="secContentBorderH">
									<td align="center" valign="middle"
										style="width: 300px; height: 220px;">
										<div id="containerDTP"
											style="width: 300px; height: 200px; float: center; display: table-cell; text-align: center; vertical-align: middle">
											<p:graphicImage value="./../../Images/grayProgressWheel.gif"
												width="40" height="40" />
										</div>
										<div id="containerDTPDefault"
											style="display: none; text-align: center">No Records
											Available</div> <!-- <b>coming soon</b> -->
									</td>
								</tr>

							</table> <!-- <div id="containerDTP"  style="width: 200px; height: 200px; margin: 0 auto" ></div> 
							</fieldset> -->
						</td>

					</tr>
				</table>
				<table width="100%" cellpadding="3" cellspacing="3">
					<tr>
						<td valign="top" width="30%">
							<table style="height: 400px;" width="100%" cellpadding="0"
								cellspacing="0" class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH">Physician Network</td>
								</tr>
								<tr class="secContentBorderH">
									<td valign="top" align="center" bgcolor="#FFFFFF">
										<!-- <img src="images/Network_chart.png" height="345px" width="550px"></img> -->
										<table width="100%">
											<tr>
												<td align="center">
													<!-- <ui:include src="../Doctor/NewChartForNetwork.xhtml"></ui:include> -->
													<p:graphicImage value="./../../Images/grayProgressWheel.gif" rendered="#{DashBoardManageBean.networkChartList.size()==0}" width="40" height="40" /> 
													<div id="network" style="float: left"></div>
													<table>
														<tr>
															<td><div id="networkDefault"
																	style="display: none; text-align: center">No
																	Records Available</div></td>
														</tr>
													</table>
												</td>
											</tr>
										</table>
										</td>
									</tr>
								</table>
										<table width="100%" style="margin-top: -20px">
											<tr>
												<!-- onclick="initPopUp();showPopWin('NetworkChartFull.jsf', 1200, 628, null);" oncomplete="fullNetworkDivDialog.show();"-->
												<td align="right" valign="bottom"><h:form
														id="networkForm">
														<p:commandLink
															value="Total Number of Doctors in Your Network: #{dashBoardManageBean.total_connectedDoctor}"
															style="font-weight:bold" onclick="showNetwork();">

														</p:commandLink>
													</h:form></td>
											</tr>
										</table>

										<div></div>
						</td>
						<td valign="top" width="30%">
							<table style="height: 400px;" width="100%" cellpadding="0"
								cellspacing="0" class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH">Top 10 Drugs Impacted By
										Pharmacogenomics</td>
								</tr>
								<tr class="secContentBorderH">
									<td align="center"><script type="text/javascript"
											src="../../JavaScript/heatmap.js"></script> <!-- <div id="containerHeatMap" style="height: 300px; min-width: 310px; max-width: 550px; margin: 0 auto"></div> -->
										<div id="containerHeatMap"
											style="height: 300px; width: 420px; display: table-cell; text-align: center; vertical-align: middle">
											<p:graphicImage value="./../../Images/grayProgressWheel.gif"
												width="40" height="40" />
										</div>
										<div id="containerHeatMapDefault"
											style="display: none; text-align: center">No Records
											Available</div></td>
								</tr>
							</table>
							<table width="100%" style="margin-top: -20px">
								<tr>
									<td align="right"><h:form id="heatMapForm">
											<p:commandLink
												value="view all Drugs Impacted By Pharmacogenomics"
												style="font-weight:bold" onclick="showfullHeatMapChart();">

											</p:commandLink>
										</h:form></td>
								</tr>
							</table>
						</td>
						<td valign="top" width="30%">
							<!-- <fieldset style="width:360px;height:270px;font-size: 11px;" class="fieldContent"> -->
							<!-- <legend class="titleBar">Insurance</legend> -->

							<table width="100%" cellpadding="0" cellspacing="0"
								style="height: 400px;" class="secContentBorderH">
								<tr height="30px">
									<td class="secHeadPartH">Top 5 Insurance</td>
								</tr>
								<tr class="secContentBorderH">
									<td align="center">
										<div id="chart"
											style="width: 325px; height: 300px; display: table-cell; text-align: center; vertical-align: middle">
											<p:graphicImage value="./../../Images/grayProgressWheel.gif"
												width="40" height="40" />
										</div>
										<div id="chartDefault"
											style="display: none; text-align: center">No Records
											Available</div>
									</td>
								</tr>

							</table>
							<table width="100%" style="margin-top: -20px">
								<tr>
									<td align="right"><h:form id="InsuranceForm">
											<p:commandLink value="view all Insurance"
												style="font-weight:bold" onclick="showfullInsuranceChart();">

											</p:commandLink>
										</h:form></td>
								</tr>
							</table> <!--  <div style="height:30px;background-color:rgb(70,130,180); "></div>
					</fieldset>  -->
						</td>
					</tr>

				</table>

				<table width="100%" cellpadding="0" cellspacing="0"
					class="secContentBorderH">
					<tr>
						<td class="secHeadPartH">ACO Measure Chart</td>
					</tr>
					<tr class="secContentBorderH">
						<td><h:form id="measrueChartFrm">

								<table width="100%">
									<tr>
										<td style="padding-left: 2%; padding-right: 2%">


											<div id="acoMeasure"
												style="width: 1250px; height: 150px; display: table-cell; text-align: center; vertical-align: middle">
												<p:graphicImage value="./../../Images/grayProgressWheel.gif"
													width="40" height="40" />
											</div>
										</td>
									</tr>
									<tr>
										<td>
											<!-- <p:commandButton value="Call ACO Measure Master" actionListener="#{reportManageBean.callACOMeasure28}" ajax="false" update=":measrueChartFrm" ></p:commandButton> -->
											<p:commandButton value="Call ACO Measure Master" id="ajax"
												update=":measrueChartFrm"
												actionListener="#{reportManageBean.callACOMeasure28}"
												onstart="showBlockUI()"
												oncomplete="hideBlockUI();displayACOChart(args);" />

										</td>
									</tr>
								</table>

							</h:form></td>
					</tr>
				</table>
				
				<h:form>
				<p:commandButton value="AutoFill Current meds" actionListener="#{standaloneReconcileProcess.autoFillCurrentMedsFromPharmacyMeds}" onstart="showBlockUI()"
												oncomplete="hideBlockUI()"></p:commandButton>
				</h:form>

				<!-- Drug Dose Combination Dialog Box -->

				<p:dialog id="drugDose" widgetVar="drugDoseCombo"
					header="#{msg.drugdosecombination}" modal="true" appendTo="@(body)"
					hideEffect="fold" width="800" height="500" position="350,70"
					styleClass="contentPan">
					<h:form id="drugDoseFrm">
						<p:dataTable value="#{userManageBean.wsDrugList}" var="drugDose"
							binding="#{userManageBean.drugDoseComboDatatable}"
							styleClass="contentArea" emptyMessage="#{msg.noMedFound}">
							<p:column headerText="Drug Name" styleClass="contentPan">
								<h:outputText value="#{drugDose.drugName}" />
							</p:column>
							<p:column headerText="Drug" styleClass="contentPan">
								<h:commandLink
									action="#{userManageBean.medicineSearchFormulary}"
									value="#{drugDose.drugDetail}"
									style="color: #006; text-decoration: underline;" />
							</p:column>


						</p:dataTable>

					</h:form>
				</p:dialog>

				<p:dialog widgetVar="insuranceDetail"
					header="#{msg.insurancedetail}" modal="true" appendTo="@(body)"
					hideEffect="fold" resizable="true" dynamic="false" width="400"
					height="500" position="450,70" styleClass="contentPan">
					<h:form id="insuranceDetailFrm">
						<p:dataTable value="#{userManageBean.insuranceDetailList}"
							var="insDtl" binding="#{userManageBean.insuranceDetailDatatable}"
							styleClass="contentArea" emptyMessage="#{msg.noMedFound}">
							<p:column headerText="#{msg.insurance}" styleClass="contentPan">
								<h:commandLink value="#{insDtl.companyName}"
									action="#{userManageBean.selectedInsuranceCompany}"
									style="color: #006; text-decoration: underline;" />
							</p:column>
						</p:dataTable>
					</h:form>
				</p:dialog>
				<!-- Anticoag clinic status dialoag box -->
				<h:form id="diag1">
					<p:dialog id="dlgForAnticoagClinicStatus1"
						widgetVar="dlgForAnticoagClinicStatusLow"
						header="List of Patients" modal="true" appendTo="@(body)"
						hideEffect="fold" resizable="true" position="450,200">

						<p:dataTable
							value="#{dashBoardManageBean.retrivePatientByAnticoagCategoryList}"
							var="anticoagListForLow" scrollable="true" scrollHeight="272"
							style="width:500px;table-layout: auto"
							rowKey="#{anticoagListForLow.id}" selectionMode="single"
							emptyMessage="#{msg.noMedFound}">

							<p:column>
								<f:facet name="header">
									<h:outputText value="Patient ID" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{anticoagListForLow.userId}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{anticoagListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{dlgPatientList.patientId}"></h:outputText> -->
							</p:column>

							<p:column>
								<f:facet name="header">
									<h:outputText value="First Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{anticoagListForLow.firstName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{anticoagListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.first_name}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Middle Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{anticoagListForLow.middleName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{anticoagListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.middle_name}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Last Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{anticoagListForLow.lastName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{anticoagListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.last_name}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Date of Birth" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{anticoagListForLow.dateOfBirth}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{anticoagListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.date_of_birth}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="INR Value" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{anticoagListForLow.result}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{anticoagListForLow}" />
										<h:outputText value="!"
											rendered="#{((anticoagListForLow.medicine_stage eq 'Maintenance') and (anticoagListForLow.result gt 4.5))}"
											style="color:red;"></h:outputText>
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.date_of_birth}"></h:outputText> -->
							</p:column>

						</p:dataTable>
						<!-- <h:outputText value="#{userManageBean.numberOfPatientforanticoagclinicforintiationphase}"></h:outputText> -->

					</p:dialog>
				</h:form>

				<!-- Lithium clinic status dialoag box -->
				<h:form id="diag2">
					<p:dialog id="dlgForLithiumClinicStatus1"
						widgetVar="dlgForLithiumClinicStatusLow" header="List of Patients"
						modal="true" appendTo="@(body)" hideEffect="fold" resizable="true"
						position="450,200">

						<p:dataTable
							value="#{dashBoardManageBean.retrivePatientForLithiumList}"
							var="lithiumList" scrollable="true" scrollHeight="272"
							style="width:500px;table-layout: auto" rowKey="#{lithiumList.id}"
							selectionMode="single" emptyMessage="#{msg.noMedFound}">

							<p:column>
								<f:facet name="header">
									<h:outputText value="Patient ID" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{lithiumList.userId}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{lithiumList}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{dlgPatientList.patientId}"></h:outputText> -->
							</p:column>

							<p:column>
								<f:facet name="header">
									<h:outputText value="First Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{lithiumList.firstName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{lithiumList}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.first_name}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Middle Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{lithiumList.middleName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{lithiumList}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.middle_name}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Last Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{lithiumList.lastName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{lithiumList}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.last_name}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Date of Birth" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{lithiumList.dateOfBirth}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{lithiumList}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.date_of_birth}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Lithium Value" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{lithiumList.result}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{lithiumList}" />
										<h:outputText value="!"
											rendered="#{lithiumList.result ge 2.5}" style="color:red;"></h:outputText>
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.date_of_birth}"></h:outputText> -->
							</p:column>

						</p:dataTable>
						<!-- <h:outputText value="#{userManageBean.numberOfPatientforanticoagclinicforintiationphase}"></h:outputText> -->

					</p:dialog>
				</h:form>

				<!-- <p:dialog id="dlg4PatientList" widgetVar="dlg4PatientListVar" header="List of Patients" modal="true" appendTo="@(body)" hideEffect="fold" resizable="true"  position="250,140" dynamic="true" >
					formularyList patientListforPopup
					<p:ajax event="close" update="dlg4PatientList"></p:ajax>
						 <p:dataTable value="#{dashBoardManageBean.patientListforPopup}" var="dlgPatientList" 
						  scrollable="true" scrollHeight="272" style="width:500px;table-layout: auto" rowKey="#{dlgPatientList.id}" selectionMode="single">
					  		<p:column >
							<f:facet name="header">
								<h:outputText value="Patient ID" />
								</f:facet>
								<p:commandLink  action="#{dashBoardManageBean.onRowSelect}" value="#{dlgPatientList.userId}" 
								style="text-decoration:underline;background-color:transparent;" >
							 <f:setPropertyActionListener target="#{dashBoardManageBean.selectedUserDetail}" value="#{dlgPatientList}" /> 
								</p:commandLink>
					   			<h:outputText value="#{dlgPatientList.patientId}"></h:outputText>
					  		</p:column>
					  		<p:column>
					  		<f:facet name="header">
								<h:outputText value="First Name" />
								</f:facet>
					   			<h:outputText value="#{dlgPatientList.firstName}"></h:outputText>
					  		</p:column>
					  		<p:column>
					  		<f:facet name="header">
								<h:outputText value="Middle Name" />
								</f:facet>
					   			<h:outputText value="#{dlgPatientList.middleName}"></h:outputText>
					  		</p:column>
					  		<p:column>
					  		<f:facet name="header">
								<h:outputText value="Last Name" />
								</f:facet>
					   			<h:outputText value="#{dlgPatientList.lastName}"></h:outputText>
					  		</p:column>
					  		<p:column>
					  		<f:facet name="header">
								<h:outputText value="Date of Birth" />
								</f:facet>
					   			<h:outputText value="#{dlgPatientList.dateOfBirth}"></h:outputText>
					  		</p:column>
					 </p:dataTable> 
					
					
					</p:dialog>
 -->
				<p:dialog id="dlg4PatientList" widgetVar="dlg4PatientListVar"
					header="List of Patients" modal="true" appendTo="@(body)"
					hideEffect="fold" resizable="true" position="250,140"
					dynamic="true">
					<!-- formularyList patientListforPopup -->
					<p:ajax event="close" update="dlg4PatientList"></p:ajax>
					<p:dataTable value="#{dashBoardManageBean.patientListforPopup}"
						var="dlgPatientList" scrollable="true" scrollHeight="272"
						style="width:500px;table-layout: auto"
						rowKey="#{dlgPatientList.id}" selectionMode="single"
						emptyMessage="#{msg.noMedFound}">
						<p:column>
							<f:facet name="header">
								<h:outputText value="Patient ID" />
							</f:facet>
							<div align="center">
								<p:commandLink action="#{dashBoardManageBean.onRowSelect}"
									value="#{dlgPatientList.userId}"
									style="text-decoration:underline;background-color:transparent;">
									<f:setPropertyActionListener
										target="#{dashBoardManageBean.selectedUserDetail}"
										value="#{dlgPatientList}" />
								</p:commandLink>
							</div>
							<!-- <h:outputText value="#{dlgPatientList.patientId}"></h:outputText> -->
						</p:column>
						<p:column>
							<f:facet name="header">
								<h:outputText value="First Name" />
							</f:facet>
							<div align="center">
								<p:commandLink action="#{dashBoardManageBean.onRowSelect}"
									value="#{dlgPatientList.firstName}"
									style="text-decoration:underline;background-color:transparent;">
									<f:setPropertyActionListener
										target="#{dashBoardManageBean.selectedUserDetail}"
										value="#{dlgPatientList}" />
								</p:commandLink>
							</div>
							<!-- <h:outputText value="#{dlgPatientList.firstName}"></h:outputText> -->
						</p:column>
						<p:column>
							<f:facet name="header">
								<h:outputText value="Middle Name" />
							</f:facet>
							<div align="center">
								<p:commandLink action="#{dashBoardManageBean.onRowSelect}"
									value="#{dlgPatientList.middleName}"
									style="text-decoration:underline;background-color:transparent;">
									<f:setPropertyActionListener
										target="#{dashBoardManageBean.selectedUserDetail}"
										value="#{dlgPatientList}" />
								</p:commandLink>
							</div>
							<!-- <h:outputText value="#{dlgPatientList.middleName}"></h:outputText> -->
						</p:column>
						<p:column>
							<f:facet name="header">
								<h:outputText value="Last Name" />
							</f:facet>
							<div align="center">
								<p:commandLink action="#{dashBoardManageBean.onRowSelect}"
									value="#{dlgPatientList.lastName}"
									style="text-decoration:underline;background-color:transparent;">
									<f:setPropertyActionListener
										target="#{dashBoardManageBean.selectedUserDetail}"
										value="#{dlgPatientList}" />
								</p:commandLink>
							</div>
							<!-- <h:outputText value="#{dlgPatientList.lastName}"></h:outputText> -->
						</p:column>
						<p:column>
							<f:facet name="header">
								<h:outputText value="Date of Birth" />
							</f:facet>
							<div align="center">
								<p:commandLink action="#{dashBoardManageBean.onRowSelect}"
									value="#{dlgPatientList.dateOfBirth}"
									style="text-decoration:underline;background-color:transparent;">
									<f:setPropertyActionListener
										target="#{dashBoardManageBean.selectedUserDetail}"
										value="#{dlgPatientList}" />
								</p:commandLink>
							</div>
							<!-- <h:outputText value="#{dlgPatientList.dateOfBirth}"></h:outputText> -->
						</p:column>
					</p:dataTable>


				</p:dialog>


				<!-- Oncology clinic status dialoag box -->
				<h:form id="diagonco1">
					<p:dialog id="dlgForOncologyClinicStatus1"
						widgetVar="dlgForOncologyClinicStatusLow" dynamic="true"
						header="List of Patients" modal="true" appendTo="@(body)"
						hideEffect="fold" resizable="true" position="450,200">

						<p:ajax event="close" update="dlgForOncologyClinicStatus1"></p:ajax>
						<p:dataTable value="#{dashBoardManageBean.listforOncologyPatient}"
							var="oncologyListForLow" scrollable="true" scrollHeight="272"
							style="width:500px;table-layout: auto"
							rowKey="#{oncologyListForLow.id}" selectionMode="single"
							emptyMessage="#{msg.noMedFound}">

							<p:column>
								<f:facet name="header">
									<h:outputText value="Patient ID" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{oncologyListForLow.userId}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{oncologyListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{dlgPatientList.patientId}"></h:outputText> -->
							</p:column>

							<p:column>
								<f:facet name="header">
									<h:outputText value="First Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{oncologyListForLow.firstName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{oncologyListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.first_name}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Middle Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{oncologyListForLow.middleName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{oncologyListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.middle_name}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Last Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{oncologyListForLow.lastName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{oncologyListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.last_name}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Date of Birth" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{oncologyListForLow.dateOfBirth}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{oncologyListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.date_of_birth}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Value" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{oncologyListForLow.result}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{oncologyListForLow}" />
										<!-- <h:outputText value="!" rendered="#{((anticoagListForLow.medicine_stage eq 'Maintenance') and (oncologyListForLow.result gt 4.5))}" 
												style="color:red;"></h:outputText> -->
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.date_of_birth}"></h:outputText> -->
							</p:column>

						</p:dataTable>
						<!-- <h:outputText value="#{userManageBean.numberOfPatientforanticoagclinicforintiationphase}"></h:outputText> -->

					</p:dialog>
				</h:form>


				<!-- Dialog box for full Network chart -->
				<!-- <p:dialog id="fullNetworkDivDialog1" widgetVar="fullNetworkDivDialog" header="List of Patients" modal="true" appendTo="@(body)" hideEffect="fold" resizable="true"  position="250,140" dynamic="true" >
	<table width="100%" style="background-color:#FFFFFF">
				  <tr>
				    <td align="center" valign="top">
				     <ui:include src="../Doctor/NewChartForNetwork.xhtml"></ui:include>
				      
				    </td>
				  </tr>
				</table>
</p:dialog> -->
				<!-- 
 <p:dialog id="fullNetworkDivDialog1" widgetVar="fullNetworkDivDialog" header="Pysician Network" modal="true" appendTo="@(body)" hideEffect="fold" resizable="true"  position="250,140" dynamic="true" >
 -->
				<div id="fullNetworkChart" class="fullNetworkListDiv">
					<table width="100%" style="background-color: #FFFFFF">
						<tr>
							<td class="secHeadPart" valign="top">
								<table width="100%">
									<tr>
										<td><b>Physician Network</b></td>
										<td align="right"><a href="#" onclick="closeNetwork()">X</a>
										</td>
									</tr>
								</table>

							</td>

						</tr>
						<tr>
							<td align="center" valign="top">
								<!-- <ui:include src="../Doctor/NetworkChartFull.xhtml"></ui:include>  -->
								<table height="300px">
									<tr>
										<td align="center" valign="top"><div id="networkFull"></div></td>
									</tr>
									<tr>
										<td align="center" valign="top"><div id="networkDefault"
												style="display: none;">No Records Available</div></td>
									</tr>
								</table>
							</td>
						</tr>
					</table>


				</div>
				<!-- </p:dialog> -->


				<!-- Dialog box for heat map -->
				<!--  <p:dialog id="fullHeatMapChartDialog1" widgetVar="fullHeatMapChartDivDialog" header="Drug Impcact" modal="true" appendTo="@(body)" hideEffect="fold" resizable="true"  position="250,140" dynamic="true" >
 -->
				<div id="fullHeatMapChart" class="fullNetworkListDiv">
					<table width="100%" style="background-color: #FFFFFF">
						<tr>
							<td class="secHeadPart" valign="top">
								<table width="100%">
									<tr>
										<td><b>All Drugs Impacted By Pharmacogenomics</b></td>
										<td align="right"><a href="#"
											onclick="closefullHeatMapChart()">X</a></td>
									</tr>
								</table>

							</td>

						</tr>
						<tr>
							<td align="center" valign="top">
								<!-- <ui:include src="../Doctor/NetworkChartFull.xhtml"></ui:include>  -->
								<table height="300px">
									<tr>
										<td align="center" valign="top"><div
												id="fullHeatMapChartDiv"></div></td>
									</tr>
									<tr>
										<td align="center" valign="top">
											<div id="fullHeatMapChartDivDefault" style="display: none;">No
												Records Available</div>
										</td>
									</tr>
								</table>
							</td>
						</tr>
					</table>


				</div>
				<!-- </p:dialog> -->


				<!-- Dialog box for fullInsuranceChart -->
				<!--  <p:dialog id="fullHeatMapChartDialog1" widgetVar="fullHeatMapChartDivDialog" header="Drug Impcact" modal="true" appendTo="@(body)" hideEffect="fold" resizable="true"  position="250,140" dynamic="true" >
 -->
				<div id="fullInsuranceChart" class="fullNetworkListDiv">
					<table width="100%" style="background-color: #FFFFFF">
						<tr>
							<td class="secHeadPart" valign="top">
								<table width="100%">
									<tr>
										<td><b>All Insurance</b></td>
										<td align="right"><a href="#"
											onclick="closefullInsuranceChart()">X</a></td>
									</tr>
								</table>

							</td>

						</tr>
						<tr>
							<td align="center" valign="top">
								<!-- <ui:include src="../Doctor/NetworkChartFull.xhtml"></ui:include>  -->
								<table height="300px">
									<tr>
										<td align="center" valign="top"><div
												id="chartAllInsurance"></div></td>
									</tr>
									<tr>
										<td align="center" valign="top">
											<div id="chartAllInsuranceDefault" style="display: none;">No
												Records Available</div>
										</td>
									</tr>
								</table>
							</td>
						</tr>
					</table>


				</div>
				<!-- </p:dialog> -->


				<!-- Dialog box for Drug drill down -->
				<!--  <p:dialog id="fullHeatMapChartDialog1" widgetVar="fullHeatMapChartDivDialog" header="Drug Impcact" modal="true" appendTo="@(body)" hideEffect="fold" resizable="true"  position="250,140" dynamic="true" >
 -->

				<div id="drugDrillDownChartDiv" class="DrillMedCatDiv">
					<table width="100%" style="background-color: #FFFFFF">
						<tr>
							<td class="secHeadPart" valign="top">
								<table width="100%">
									<tr>
										<td><b>All Medicines by Category</b></td>
										<td align="right"><a href="#"
											onclick="closeDrillDownChartForMed()">X</a></td>
									</tr>
								</table>

							</td>

						</tr>
						<tr>
							<td valign="middle" align="center">
								<div id="drugDrillDownChart4MedProcess" style="height: 408px">
									<img src="${request.contextPath}/Images/processingDiv.gif"
										alt="Processing Chart...." />
								</div>
							</td>
						</tr>
						<tr>
							<td><h:form id="popMedByCat">
									<table width="100%" style="background-color: #FFFFFF"
										id="chartDivMainDrillMed">
										<!--  <tr>
				    <td class="secHeadPart" valign="top">
				    <table width="100%">
				      <tr>
				        <td><b>All Medicines by Category</b></td>
				        <td align="right">
				          <a href="#" onclick="closeDrillDownChartForMed()">X</a>
				        </td>
				      </tr>
				    </table>
				      
				    </td>
				    
				  </tr> -->
										<tr>
											<td align="center" valign="top">
												<!-- <ui:include src="../Doctor/NetworkChartFull.xhtml"></ui:include>  -->
												<table height="300px">

													<tr>
														<td align="center" valign="top"><div
																id="drugDrillDownChart4Med"></div></td>
													</tr>
													<tr>
														<td align="center" valign="top">
															<div id="drugDrillDownChart4MedDefault"
																style="display: none;">No Records Available</div>
														</td>
													</tr>
												</table>
											</td>
										</tr>
									</table>

								</h:form></td>
						</tr>
					</table>
				</div>
				<!-- </p:dialog> -->


				<!-- Heat Map clinic status dialoag box -->
				<h:form id="diagheatmap1">
					<p:dialog id="dlgForHeatMapStatus1"
						widgetVar="dlgForHeatMapStatusLow" dynamic="true"
						header="List of Patients" modal="true" appendTo="@(body)"
						hideEffect="fold" resizable="true" position="450,200">

						<p:ajax event="close" update="dlgForHeatMapStatus1"></p:ajax>
						<p:dataTable
							value="#{dashBoardManageBean.listforDrugGeneInteractionPatient}"
							var="heatmapListForLow" scrollable="true" scrollHeight="272"
							style="width:500px;table-layout: auto"
							rowKey="#{heatmapListForLow.id}" selectionMode="single"
							emptyMessage="#{msg.noMedFound}">

							<p:column>
								<f:facet name="header">
									<h:outputText value="Patient ID" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{heatmapListForLow.userId}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{heatmapListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{dlgPatientList.patientId}"></h:outputText> -->
							</p:column>

							<p:column>
								<f:facet name="header">
									<h:outputText value="First Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{heatmapListForLow.firstName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{heatmapListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.first_name}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Middle Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{heatmapListForLow.middleName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{heatmapListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.middle_name}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Last Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{heatmapListForLow.lastName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{heatmapListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.last_name}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Date of Birth" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{heatmapListForLow.dateOfBirth}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{heatmapListForLow}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.date_of_birth}"></h:outputText> -->
							</p:column>
							<!-- 	<p:column>
					  		<f:facet name="header">
								<h:outputText value="Value" />
								</f:facet>
								<div align="center">
								<h:commandLink  action="#{dashBoardManageBean.onRowSelect}" value="#{heatmapListForLow.result}" 
								style="text-decoration:underline;background-color:transparent;" >
								<f:setPropertyActionListener target="#{dashBoardManageBean.selectedUserDetail}" value="#{heatmapListForLow}" />
								<h:outputText value="!" rendered="#{((anticoagListForLow.medicine_stage eq 'Maintenance') and (oncologyListForLow.result gt 4.5))}" 
												style="color:red;"></h:outputText>
								</h:commandLink>
								</div>
					   			<h:outputText value="#{anticoagListForLow.date_of_birth}"></h:outputText>
					  		</p:column> -->

						</p:dataTable>
						<!-- <h:outputText value="#{userManageBean.numberOfPatientforanticoagclinicforintiationphase}"></h:outputText> -->

					</p:dialog>
				</h:form>


				<!-- Speciality vs Non Specility drug patient list dialoag box -->
				<h:form id="diagspvsnonsp1">
					<p:dialog id="dlgForspvsnonsp1" widgetVar="dlgForspvsnonsp"
						dynamic="true" header="List of Medicine" modal="true"
						appendTo="@(body)" hideEffect="fold" resizable="true"
						position="450,200">

						<p:ajax event="close" update="diagspvsnonsp1"></p:ajax>
						<p:dataTable
							value="#{dashBoardManageBean.specialityvsnonDrugPatientList}"
							var="spvsnonspmed" scrollable="true" scrollHeight="272"
							style="width:500px;table-layout: auto"
							emptyMessage="#{msg.noMedFound}">

							<p:column>
								<f:facet name="header">
									<h:outputText value="Medicine Name" />
								</f:facet>
								<h:outputText value="#{spvsnonspmed.medName}"></h:outputText>
							</p:column>

							<p:column>
								<f:facet name="header">
									<h:outputText value="Total patient" />
								</f:facet>
								<h:outputText
									value="#{spvsnonspmed.patientCountForDrugCategory}"></h:outputText>
							</p:column>
						</p:dataTable>
						<!-- <h:outputText value="#{userManageBean.numberOfPatientforanticoagclinicforintiationphase}"></h:outputText> -->

					</p:dialog>
				</h:form>

				<p:dialog widgetVar="complianceDrillDown" id="complianceDrillID"
					dynamic="true" header="List of Patients" modal="true"
					appendTo="@(body)" hideEffect="fold" resizable="true"
					position="450,200">
					<p:ajax event="close" update="complianceDrillID" />
					<h:form id="complianceFrmDrillDown">
						<p:dataTable id="DTblComplianceDrill"
							value="#{dashBoardManageBean.pateintListForComplianceMeterList}"
							var="complianceDrillDown" scrollable="true" scrollHeight="272"
							style="width:500px;table-layout: auto"
							rowKey="#{complianceDrillDown.id}" selectionMode="single"
							emptyMessage="#{msg.noMedFound}">

							<p:column>
								<f:facet name="header">
									<h:outputText value="Patient ID" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{complianceDrillDown.userId}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{complianceDrillDown}" />
									</h:commandLink>
								</div>
							</p:column>

							<p:column>
								<f:facet name="header">
									<h:outputText value="First Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{complianceDrillDown.firstName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{complianceDrillDown}" />
									</h:commandLink>
								</div>
								<!-- <h:outputText value="#{anticoagListForLow.first_name}"></h:outputText> -->
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Middle Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{complianceDrillDown.middleName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{complianceDrillDown}" />
									</h:commandLink>
								</div>
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Last Name" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{complianceDrillDown.lastName}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{complianceDrillDown}" />
									</h:commandLink>
								</div>
							</p:column>
							<p:column>
								<f:facet name="header">
									<h:outputText value="Date of Birth" />
								</f:facet>
								<div align="center">
									<h:commandLink action="#{dashBoardManageBean.onRowSelect}"
										value="#{complianceDrillDown.dateOfBirth}"
										style="text-decoration:underline;background-color:transparent;">
										<f:setPropertyActionListener
											target="#{dashBoardManageBean.selectedUserDetail}"
											value="#{complianceDrillDown}" />
									</h:commandLink>
								</div>
							</p:column>
						</p:dataTable>
					</h:form>
				</p:dialog>



			</p:layoutUnit>
		</p:layout>

	</f:view>
	<script type="text/javascript" language="javascript" >
	a=1;
	function showNetwork()
	{
		console.log("Testing........called in shownetwork");
		//alert("called in shownetwork");
	document.getElementById('fullNetworkChart').style.display="block";	
	if(a==1){
	plotNetworkFullForMe();
	}
	a++;
	}
	
	function closeNetwork()
	{
	document.getElementById('fullNetworkChart').style.display="none";		
	}
	
	//Show heat map for full drug impact
	function showfullHeatMapChart()
	{
	document.getElementById('fullHeatMapChart').style.display="block";	
	if(a==1){
		alert("called in showfullHeatMapChart");
		plotNetworkFullForMe();
	}
	a++;
	}
	
	function closefullHeatMapChart()
	{
	document.getElementById('fullHeatMapChart').style.display="none";	
	}
	
	//show Med Drill down chart
	function showDrillDownChartforMed()
	{
	 document.getElementById('drugDrillDownChartDiv').style.display="block";	
	 document.getElementById('chartDivMainDrillMed').style.display="none";
	 document.getElementById('drugDrillDownChart4MedProcess').style.display="block";
	  setTimeout(drugdrillNow,2000); 
	 //plotMedDrillDownChartNow();
	

	}
	
	function drugdrillNow()
	{
		document.getElementById('drugDrillDownChart4MedProcess').style.display="none";	
		document.getElementById('chartDivMainDrillMed').style.display="block";
		plotMedDrillDownChartNow();
	}
	
	function closeDrillDownChartForMed()
	{
	document.getElementById('drugDrillDownChartDiv').style.display="none";	
	//document.getElementById("frmMedTaken:outputDrugJSON").innerHTML="";
	}
	
	//Show heat map for full drug impact
	function showfullInsuranceChart()
	{
	document.getElementById('ddlFullInsuranceForm:hiddenbtnforInsurancePatientFull').click(); 
	showInsuranceChart();
	document.getElementById('fullInsuranceChart').style.display="block";
	}
	
	function closefullInsuranceChart()
	{
	document.getElementById('fullInsuranceChart').style.display="none";	
	}
	</script>
	<script type="text/javascript">

</script>
	<script type="text/javascript" src="../../JavaScript/d3.v2.js"></script>
	<script type="text/javascript" src="../../JavaScript/gauge.js"></script>

	<script>
								
						
					var gauges = [];
					
					function createGauge(name, label, min, max)
					{
						var config = 
						{
							size: 130,
							label: label,
							min: undefined != min ? min : 0,
							max: undefined != max ? max : 100,
							minorTicks: 5
						}
						
						var range = config.max - config.min;
						config.yellowZones =[{from: 60, to:80}] ;//[{ from: config.min + range*0.75, to: config.min + range*0.9 }];
						config.redZones = [{from: 00, to:60}] ;//[{ from: config.min + range*0.9, to: config.max }];
						config.greenZones = [{from: 80, to:100}] ;
						
						gauges[name] = new Gauge(name + "GaugeContainer", config);
						gauges[name].render();
					}
					
					function createGauges()
					{
						createGauge("compliance", "Compliance");
					}
					
					function updateGauges()
					{
						for (var key in gauges)
						{
							var value = getRandomValue(gauges[key])
							if(value!=0){
							gauges[key].redraw(value);
							}
						}
					}
					
					function getRandomValue(gauge)
					{
						var overflow = #{userManageBean.meterGaugeModel.value}; //10
						return overflow; //gauge.config.min - overflow + (gauge.config.max - gauge.config.min + overflow*2) *  Math.random();
					}
					
					function initialize()
					{
						createGauges();
						setInterval(updateGauges, 1000);
					}

					 function showBlockUI(){
							//	alert("block UI show");
								blockUI.show();
								} 
					 
					 function hideBlockUI(){
							//	alert("block UI hide");
								blockUI.hide();
								//setTimeout(highchartsBackGroundLoading,0);
								}
	 
				</script>
</h:body>



<!--fullHeatMapChartDiv Heat Map Start -->
<script type="text/javascript">
		
    	// Heatmap for Gene and med
    	   drugGenevalue = '#{dashBoardManageBean.patientDrugGeneFullChartList}';
    	   uniqueMedNames='#{dashBoardManageBean.uniqueMedNamesForGeneFull}';
    	   uniqueGeneNames='#{dashBoardManageBean.uniqueGeneNamesForGeneFull}';
    	//Parsing JSon data
    	var uniqueDrugData=$.parseJSON(uniqueMedNames);
    	var uniqueGeneData=$.parseJSON(uniqueGeneNames);
    	console.log("unique drug data "+uniqueDrugData);
			
    	var lendglist=uniqueDrugData.length;    	
    	 if(lendglist==0)
     	{
     	/*  alert(" value anand: "+specialityDrugData); */
     	 document.getElementById('fullHeatMapChartDivDefault').style.display="block";
     	 document.getElementById('fullHeatMapChartDiv').style.display="none";
     	}
    	     var dgData = $.parseJSON(drugGenevalue);
    	     var testArray=[];
    		console.log("jsone adata "+dgData);
    		
    		var lendgdlist=dgData.length;    	
       	 if(lendgdlist==0)
        	{
        	/*  alert(" value anand: "+specialityDrugData); */
        	 document.getElementById('fullHeatMapChartDivDefault').style.display="block";
        	 document.getElementById('fullHeatMapChartDiv').style.display="none";
        	}	
    		  $.each(dgData, function(index, value) {
    	 	
    		      	    	});
    		//console.log("test array data "+testArray);
    	     var genetype_Json= new Array();
    	     var medName_Json = new Array();
    	     var patCount_Json = new Array();
    	     var totalPatient_Json = new Array();
    	     var x_axisList=new Array();
    	     var y_axisList=new Array();
    	     var xy_axislist=new Array();

    		var y_medName_Json=new Array();
    		var x_genetype_Json=new Array();

    	     for(var uniqueDrugName in uniqueDrugData){
    	    	 y_medName_Json.push(uniqueDrugData[uniqueDrugName].medicineName);
    	     }
    	     for(var uniqueGeneName in uniqueGeneData){
    	    	 x_genetype_Json.push(uniqueGeneData[uniqueGeneName].geneSymbol);
    	     }

    	     for(var drug_gene_intaraction in dgData)
    	         {
    	        var x_axis,y_axis,value;
    	        var count=0,count1=0;
    	        for(var drugName in uniqueDrugData)
    	            {
    	              //alert("first loop"+dgData[drug_gene_intaraction].medicineName+"uniqueDrugData[drugName].medicineName "+uniqueDrugData[drugName].medicineName);
    	              if(dgData[drug_gene_intaraction].medicineName == uniqueDrugData[drugName].medicineName){
    	            	  
    	            	  y_axis=count;
    	            	// alert("y "+y_axis)
    	                  }
    	              
    	              count++;
    	              //console.log("drug name "+uniqueDrugData[drugName].medicineName);
    	            }
    	        for(var geneName in uniqueGeneData)
    	            {
    	        	//var count=0;
    	            if(dgData[drug_gene_intaraction].geneSymbol == uniqueGeneData[geneName].geneSymbol){
    	                
    	            	x_axis=count1;
    	            	//alert("x "+x_axis)
    	                }
    	           
    	            count1++;
    	           // console.log("geneSymbol "+uniqueGeneData[geneName].geneSymbol);
    	          }
    	        /*  x_axisList.push([x_axis]);
    	         y_axisList.push([y_axis]); */
    	        totalPatient_Json.push([x_axis,y_axis,dgData[drug_gene_intaraction].patientCount]);
    	        // var res = x_axis.concat(y_axis);
    	         var res = x_axis +""+y_axis;
    	        xy_axislist.push([res]);
    	         }
    	    //alert( xy_axislist.length +":::::"+xy_axislist[0]);



    	    for(var x_axis=0 ; x_axis &lt; x_genetype_Json.length; x_axis++)
    	        {
    			 for(var y_axis=0; y_axis &lt; y_medName_Json.length; y_axis++)
    				{
    				//var checkForMatch=x_axis.concat(y_axis);
    				 var checkForMatch = x_axis +""+y_axis;
    				//alert(checkForMatch);
    				var count=0;
    				for(var check in xy_axislist )
    					{
    				
    					if(xy_axislist[check]==checkForMatch)
    						{
    							count++;
    							break;
    						}
    					}
    				if(count == 0)
    					{
    					  totalPatient_Json.push([x_axis,y_axis,0]);
    					}
    				
    				}
    	        }
    $('#fullHeatMapChartDiv').highcharts({
        
        chart: {
            type: 'heatmap',
            marginTop: 10,
            marginBottom: 30,           
             plotShadow: true,
             plotBorderWidth: 2,
             plotBorderColor:'#7CB5EC',
             borderColor:'#7CB5EC',
             
        },


        title: {
            text: ''
        },

        xAxis: {
        	labels: {
                rotation: -20,
                 style: {
                    fontSize: '9px',
                } 
            },
            categories: x_genetype_Json
               /*  ['VKORC1', 'CYP2D6', 'CYP2C19', 'CYP2C1', 'TPMT','SLCO1B1','HLA-B'] */
        },

        yAxis: {
            categories:y_medName_Json,
                /*  ['warfain', 'coumadin', 'accupril', 'ABC plus', 'apixaban','clopidogrel','Amitriptyline'], */
            title: null
        },

        colorAxis: {
            min: 0,
            minColor: '#FFFFFF',
            maxColor: '#B7DBF2'
        },

        legend: {
            align: 'right',
            layout: 'vertical',
            margin: 0,
            verticalAlign: 'top',
            y: 25,
            symbolHeight: 220
        },

        tooltip: {
            formatter: function () {
                return '<b>' + this.series.xAxis.categories[this.point.x] + '</b> - <b>' +'</b> <b>' + this.series.yAxis.categories[this.point.y] + '<b>: </b>'+
                    this.point.value +  '</b>';
            }
        },

        series: [{
            name: 'Patient Per Gene Med',
            borderWidth: 1,
            borderColor:'#7CB5EC',
            data: totalPatient_Json,
                 /* [
                   [0,0,10],[0,1,19],[0,2,8],[0,3,24],[0,4,127],[0,5,67],[0,6,10],
                   [1,0,92],[1,1,58],[1,2,78],[1,3,117],[1,4,48],[1,5,92],[1,6,58],
                   [2,0,35],[2,1,15],[2,2,123],[2,3,64],[2,4,52],[2,5,35],[2,6,15],
                   [3,0,72],[3,1,132],[3,2,114],[3,3,19],[3,4,16],[3,5,72],[3,6,132],
                   [4,0,38],[4,1,5],[4,2,8],[4,3,117],[4,4,115],[4,5,38],[4,6,5],
                   [5,0,115],[5,1,123],[5,2,35],[5,3,15],[5,4,52],[5,5,35],[5,6,64],
                   [6,0,142],[6,1,62],[6,2,104],[6,3,119],[6,4,16],[6,5,12],[6,6,112]
                   ], */
            dataLabels: {
                enabled: true,
                color: '#006',
                style: {
                    textShadow: 'none',
                    HcTextStroke: null
                }
            }
        }]

    });
    
    //Chart for Med Taken
	/* $(document).ready(function(){*/
		
    	datavalue = '#{dashboardManageBean.drugListByCategoryChart}';

    	 var barData =$.parseJSON(datavalue);
    	 var barDataLen=barData.length;
    	 
    	 if(barDataLen==0)
     	{
     	/*  alert(" value anand: "+specialityDrugData); */
     	 document.getElementById('drugDrillDownChartDefault').style.display="block";
     	 document.getElementById('drugDrillDownChart').style.display="none";
     	}
    	 
    //	 alert(datavalue);
  	   $.each(barData, function(index, value) {
  	 //   	console.log("drugCategory "+this['DrugCategory']+"totalDrug"+this['totalDrug']);
  	    	});
  
  	 var processed_json = new Array();
  	 for(var i in barData)
	 {
		console.log("json array drug categories  "+barData[i].drugName);
		console.log("json array drug totalDrug  "+barData[i].totalPatient);
	 var drugCategories= barData[i].drugName;
	// var newString = drugCategories.substring(0,drugCategories.indexOf(','))+"<br />"+drugCategories.substring(drugCategories.indexOf(',')+1,drugCategories.length);
	// console.log("new String ======= "+newString);
	 var totalDrugCount = barData[i].totalPatient;
	
	  processed_json.push([(drugCategories),(totalDrugCount)]);
	
	 }
          
    	console.log("printing json array data "+processed_json);
	    $('#drugDrillDownChart').highcharts({
            chart: {
                type: 'column'
            },
            title: {
                text: ' '
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                type: 'category',
                labels: {
                    rotation: -45,
                    formatter: function() {
                        return(this.value.substring(0,8) + "...");
                    },
                    style: {
                        fontSize: '10px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: ''
                       
                }
            },
            legend: {
                enabled: false
            },
            tooltip: {
            	useHTML:true,
            
            	//pointFormat: 'Total Drug: <b>{point.y:.1f} </b>',
            	
            	 formatter: function() {
                    //return "<div style='width: 400px; white-space:normal;'>"+this.point.name.substring(0,this.point.name.indexOf(',')+1)+'<br />'+this.point.name.substring(this.point.name.indexOf(',')+1,this.point.name.length)+'<br />'+'Drugs:'+'<b>'+ this.point.y+'.0</b>'+ "</div>";
                    return  this.point.name +"<br/>"+'Total Medicines: '+'<b>'+ this.point.y+'</b>';
               } 
            
                /* formatter: function() {
                    /* return this.point.name.substring(0,this.point.name.indexOf(',')+1)+"<br />"+this.point.name.substring(this.point.name.indexOf(',')+1,this.point.name.length) +'<br/>' +
                        
                    'Drugs:'+'<b>'+ this.point.y+'.0</b>'; 
                    
                	var words = this.point.name.split(/[\s]/);
                    var numWordsPerLine = 4;
                    var str = [];
					//alert(words);
                    for (var word in words) {
                        if (word > 0 &amp;&amp; word % numWordsPerLine == 0)
                            str.push('<br/>');

                         str.push(words[word]);
                    }
					str.push("<br/>"+'Total Patients: '+'<b>'+ this.point.y+'.0</b>');
                    return "<div style='width: 400px; white-space:normal;'>"+str.join(' ')+ "</div>";
                } */
            },
            
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0,
                    color:'#7CB5EC',
                    cursor:'pointer'
                  }
                },
            series: [{
                name: '',
                data:processed_json, 
                
                dataLabels: {
                    enabled: true,
                    rotation: -90,
                    color: '#FFFFFF',
                    align: 'right',
                    x: 4,
                    y: 8,
                    style: {
                        fontSize: '9px',
                        fontFamily: 'Verdana, sans-serif',
                        textShadow: '0 0 3px black'
                    }
                }
            }]
        });  

		</script>
<!-- fullHeatMapChartDiv Heat Map End -->
<!-- All Insurance Chart -->
<script type="text/javascript">
   
    //Chart for Insurance All
		    	function showInsuranceChart()
		    		{
		        	dataSetBar='#{userManageBean.insuranceDetailListBarFull}';

		        	 var barData =$.parseJSON(dataSetBar);
		        	 console.log("insurance 1111::: "+barData);
		        	 var barDataLen=barData.length;
		        	 //alert(barDataLen);
		        	 if(barDataLen==0)
                 	{
                 	
                 	 document.getElementById('chartAllInsuranceDefault').style.display="block";
                 	 document.getElementById('chartAllInsurance').style.display="none";
                 	}
		        	 
		        //	 alert(datavalue);
		      	   $.each(barData, function(index, value) {
		      	 //   	console.log("drugCategory "+this['DrugCategory']+"totalDrug"+this['totalDrug']);
		      	    	});
		      
		      	 var processed_json = new Array();
		      	 for(var i in barData)
				 {
					console.log("json array company Name  "+barData[i].rangeName);
					console.log("json array company Value "+barData[i].countValue);
				 var companyName= barData[i].rangeName;
				
				 var totalPatientCount = barData[i].countValue;
				
				  processed_json.push([(companyName),(totalPatientCount)]);
				
				 }
		              
		        	console.log("printing json array data "+processed_json);
		    	    $('#chartAllInsurance').highcharts({
		                chart: {
		                    type: 'bar'
		                },
		                title: {
		                    text: ' '
		                },
		                subtitle: {
		                    text: ''
		                },
		                xAxis: {
		                    type: 'category',
		                    labels: {
		                        rotation: -360,
		                        formatter: function() {
		                            return(this.value.substring(0,10) + "...");
		                        },
		                        style: {
		                            fontSize: '10px',
		                            fontFamily: 'Verdana, sans-serif',
		                           
		                        }
		                    }
		                },
		                yAxis: {
		                    min: 0,
		                    title: {
		                        text: ''
		                           
		                    }
		                },
		                legend: {
		                    enabled: false
		                },
		                tooltip: {
		                	useHTML:true,
		                
		                	//pointFormat: 'Total Drug: <b>{point.y:.1f} </b>',
		                	
		                	 formatter: function() {
	                            //return "<div style='width: 400px; white-space:normal;'>"+this.point.name.substring(0,this.point.name.indexOf(',')+1)+'<br />'+this.point.name.substring(this.point.name.indexOf(',')+1,this.point.name.length)+'<br />'+'Drugs:'+'<b>'+ this.point.y+'.0</b>'+ "</div>";
	                            return  this.point.name +"<br/>"+'Total Patients: '+'<b>'+ this.point.y+'</b>';
	                       } 
		                
		                    
		                },
		                
		                plotOptions: {
		                    column: {
		                        pointPadding: 0.2,
		                        borderWidth: 0,
		                        color:'#7CB5EC'
		                    }
		                },
		                series: [{
		                	pointWidth: 18,
		                	name: '',
		                    data:processed_json, 
		                    color:'#7CB5EC',
		                    dataLabels: {
		                        enabled: true,
		                        rotation: -360,
		                        color: '#FFFFFF',
		                        align: 'right',
		                        x: -8,
		                        y: 3,
		                        style: {
		                            fontSize: '9px',
		                            fontFamily: 'Verdana, sans-serif',
		                            textShadow: '0 0 3px black'
		                        }
		                    }
		                }]
		            });
		    		}
		    	    </script>

<!-- Newtork chart for top 15 connection  -->


<script type="text/javascript" charset="utf-8">
//plot to display drug drill down
/* function plotDrugDrillDownChart()
{
	 //Chart for Med Taken
	$(document).ready(function(){
		
    	datavalue = '#{dashboardManageBean.drugListByCategoryChart}';

    	 var barData =$.parseJSON(datavalue);
    	 var barDataLen=barData.length;
    	 
    	 if(barDataLen==0)
     	{
     	  
     	 document.getElementById('drugDrillDownChartDefault').style.display="block";
     	 document.getElementById('drugDrillDownChart').style.display="none";
     	}
    	 
    //	 alert(datavalue);
  	   $.each(barData, function(index, value) {
  	 //   	console.log("drugCategory "+this['DrugCategory']+"totalDrug"+this['totalDrug']);
  	    	});
  
  	 var processed_json = new Array();
  	 for(var i in barData)
	 {
		console.log("json array drug categories  "+barData[i].drugName);
		console.log("json array drug totalDrug  "+barData[i].totalPatient);
	 var drugCategories= barData[i].drugName;
	// var newString = drugCategories.substring(0,drugCategories.indexOf(','))+"<br />"+drugCategories.substring(drugCategories.indexOf(',')+1,drugCategories.length);
	// console.log("new String ======= "+newString);
	 var totalDrugCount = barData[i].totalPatient;
	
	  processed_json.push([(drugCategories),(totalDrugCount)]);
	
	 }
          
    	console.log("printing json array data "+processed_json);
	    $('#drugDrillDownChart').highcharts({
            chart: {
                type: 'column'
            },
            title: {
                text: ' '
            },
            subtitle: {
                text: ''
            },
            xAxis: {
                type: 'category',
                labels: {
                    rotation: -45,
                    formatter: function() {
                        return(this.value.substring(0,8) + "...");
                    },
                    style: {
                        fontSize: '10px',
                        fontFamily: 'Verdana, sans-serif'
                    }
                }
            },
            yAxis: {
                min: 0,
                title: {
                    text: ''
                       
                }
            },
            legend: {
                enabled: false
            },
            tooltip: {
            	useHTML:true,
            
            	//pointFormat: 'Total Drug: <b>{point.y:.1f} </b>',
            	
            	 formatter: function() {
                    //return "<div style='width: 400px; white-space:normal;'>"+this.point.name.substring(0,this.point.name.indexOf(',')+1)+'<br />'+this.point.name.substring(this.point.name.indexOf(',')+1,this.point.name.length)+'<br />'+'Drugs:'+'<b>'+ this.point.y+'.0</b>'+ "</div>";
                    return  this.point.name +"<br/>"+'Total Medicines: '+'<b>'+ this.point.y+'</b>';
               } 
            
             
            },
            
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0,
                    color:'#7CB5EC',
                    cursor:'pointer'
                    
                },
            series: [{
                name: '',
                data:processed_json, 
                
                dataLabels: {
                    enabled: true,
                    rotation: -90,
                    color: '#FFFFFF',
                    align: 'right',
                    x: 4,
                    y: 8,
                    style: {
                        fontSize: '9px',
                        fontFamily: 'Verdana, sans-serif',
                        textShadow: '0 0 3px black'
                    }
                }
            }]
        });  


	
	
}
 */

//Funtion to plot full network chart
function plotNetworkFullForMe()
{
	 console.log("testing.......called in plotNetworkFullForMe");
valueForNetwork='#{dashBoardManageBean.networkChartListFull}';

var networkData= $.parseJSON(valueForNetwork);
var networklen = networkData.length;
console.log("Network length "+networklen);
/* networklen=0; */
 
if(networklen==0)
{
/*  alert(" value anand: "+specialityDrugData); */
 document.getElementById('networkFullDefault').style.display="block";
 document.getElementById('networkFull').style.display="none";
}
//console.log("networkData====== "+networkData);

var patientIDArray = new Array();
var doctorNameArray = new Array();
var prescriberArray = new Array();
for(var i in networkData){
	var doctorName = networkData[i].doctor_name;
	var patientID = networkData[i].patient_id;
	var doctor_prescriptions = networkData[i].doctor_prescriptions;
	patientIDArray.push(patientID);
	doctorNameArray.push(doctorName);
	prescriberArray.push(doctor_prescriptions);
	console.log("------------------ "+doctorNameArray[i]+"++++++++++++++++++++++ "+patientIDArray[i]+"********* "+prescriberArray[i]);
	
}
//var sorted_arr = doctorNameArray.sort();
 console.log(doctorNameArray);
var results = [];
for (var i = 0; i &lt; doctorNameArray.length ; i++) {
    if (doctorNameArray[i + 1] != doctorNameArray[i]) {
        results.push(doctorNameArray[i]);
    }
} 
//alert(results);

		
for(var i in patientIDArray)
	{
	
	}
/* var tooltip = d3.select("body")
.data(patientIDArray)
.append("div")
.style("position", "absolute")
.style("z-index", "10")
.style("visibility", "hidden")
.text(function(d,i){return patientIDArray[i];}); */

var w = 1100, h = 800;

var labelDistance = 0;

/* var vis = d3.select("#network").append("svg:svg").attr("width", w).attr("height", h); */

/* var vis = d3.select("#network").append("svg:svg")
.attr("width", w)
.attr("height", h); */

var vis = d3.select("#networkFull")
.append("svg")
.attr("width", w)
.attr("height", h);

  var div = d3.select("body")
.append("div")  // declare the tooltip div 
.attr("class", "tooltip")              // apply the 'tooltip' class
.style("opacity", 0);  
 
 

var nodes = [];
var labelAnchors = [];
var labelAnchorLinks = [];
var links = [];
//var new_nodes=[];
for(var i = 0; i &lt; doctorNameArray.length; i++) {
	if(doctorNameArray[i] != null)
		{
		var node = {
				label : "Dr " + doctorNameArray[i]
		 
			};
		//alert(doctorNameArray[i]);
		
	
	nodes.push(node);
	
	 labelAnchors.push({
		node : node
		
	});
	 
	 //console.log("labelAnchors========== "+labelAnchors.valueOf());
	labelAnchors.push({
		node : node
	}); 
	
		}
	/* new_nodes.push(nodes[i].label);
	var new_name=new_nodes[i]; */
	/*  console.log("nodes========== "+nodes[i].label+" patientIDArray "+patientIDArray[i]+" Dr " + doctorNameArray[i]);
	var node = vis.selectAll("g.node").data(nodes).enter().append("svg:g").attr("class", "node");
	node.append("svg:circle").attr("r", patientIDArray[i]).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);  */
	//console.log("labelAnchors1========== "+labelAnchors.valueOf());
};


for(var i = 0; i &lt; 1; i++) {
	for(var j = 0; j &lt;= nodes.length-1; j++) {
		//if(doctorNameArray[i] != doctorNameArray[i+1])
			links.push({
				source : i,
				target : j,
				weight : 1
			});		
		//console.log("i========= "+i+" j=============== "+j);
		//console.log("weight========= "+weight);
		labelAnchorLinks.push({
			source : j * 2,
			target : j * 2 + 1,
			weight : 2
		});	
	}
	
	//console.log("labelAnchorLinks========== "+labelAnchorLinks.valueOf());
};
//console.log("links========== "+links.length);
//console.log("labelAnchorLinks========== "+labelAnchorLinks.length);

var force = d3.layout.force().size([w, h]).nodes(nodes).links(links).gravity(1).linkDistance(50).charge(-3000).linkStrength(function(x) {
	return x.weight * 2
});


force.start();

var force2 = d3.layout.force().nodes(labelAnchors).links(labelAnchorLinks).gravity(0).linkDistance(0).linkStrength(8).charge(-100).size([w, h]);
force2.start();


 //var node=[];
 /* for(var key in nodes) {
    var val = nodes[key];
  alert("Key: "+key+" value:"+val);
} */
//var node = new Array();
  /* for(var i=0;i &lt; nodes.length;i++){
	console.log("nodes length============= "+nodes[i].label);
	
	node = vis.selectAll("g.node").data(nodes[i].label).enter().append("svg:g").attr("class", "node");
	//alert(typeof(node));
}   */ 
 /* var node = [];
 for(var i=0;i &lt; 1;i++){
	 node = vis.selectAll("g.node").data(nodes).enter().append("svg:g").attr("class", "node");
	 //alert(typeof(nodes));
	 //node.append("svg:circle").attr("r", 2).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);  
}  */
//var node=[];

	//var node = vis.selectAll("g.node").data(nodes, function(d){return d;}).enter().append("svg:g").attr("class", "node");
	

//node.append("svg:circle").attr("r", function(patientIDArray) { return Math.ceil(patientIDArray/10); }).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);
// var node = [];
var patient_result = new Array();
var prescriber_result = new Array();
var new_nodes= [];
var new_name = 0;

var patient_max = 0;
var prescriber_max = 0;
var a = patientIDArray.length;
var b = prescriberArray.length;
for (counter=0;counter &lt; a;counter++)
{
 if (patientIDArray[counter] > patient_max)
 {
	 patient_max = patientIDArray[counter];
 }
}
for (counter=0;counter &lt; b;counter++)
{
 if (prescriberArray[counter] > prescriber_max)
 {
	 prescriber_max = prescriberArray[counter];
 }
}
console.log("   " +patient_max+"   "+prescriber_max);
 for(var i=0;i &lt; 1;i++)
{
 for(var j=0;j &lt; nodes.length;j++)
 {
	 new_nodes.push(nodes[j].label);
	 console.log("new_nodes====== "+new_nodes[j]);
	 new_name=new_nodes[j];
	 console.log("new_name====== "+new_name);
	 //var node = vis.selectAll("g.node").data(nodes).enter().append("svg:g").attr("class", "node");
	 //alert(typeof(new_nodes)+node.length);
	 console.log("patient count+++++++++ "+patientIDArray[j]);
	  // var fixed=patientIDArray[i];
	   var patient_fixed=patient_max;
	   var prescriber_fixed=prescriber_max;
	   console.log("fixed============== "+prescriber_fixed);
	   patient_result.push(Math.ceil(10*(patientIDArray[j]/patient_fixed)));
	   //prescriber_result.push(Math.ceil(prescriberArray[j]/prescriber_fixed));
	  prescriber_result.push(prescriberArray[j]/prescriber_fixed);
	   
	  // result=Math.ceil(result);
	   console.log("Final count================ "+patient_result+"    "+prescriber_result);
	   //node = vis.selectAll("g.node").data(nodes[j]).enter().append("svg:g").attr("class", "node");
	   
		   //node.append("svg:circle").attr("r", result).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 0); 
	 //node.append("svg:circle").attr("r", 2).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);  
		   //alert(node.length);
	   
}
} 
 console.log("patient_result================ "+patient_result);
 
 var link = vis.selectAll("line.link").data(links).enter().append("svg:line").attr("class", "link").style("stroke", "#000066").style("stroke-width", 
		 function(d,i){
	 		if(prescriber_result[i] == 0)
	 			{
	 			return 0.2;
	 			}
	 		else
	 			{
	 			return prescriber_result[i];
	 			}
	 			});
 //var m=0;
 //while(m &lt; nodes.length){
var node=vis.selectAll("g.node").data(force.nodes()).enter().append("svg:g").attr("class", "node")
 	.append("svg:circle").attr("r", function(d,i){return patient_result[i];}).style("fill", "#7CB5EC").style("stroke", "#FFF").style("stroke-width", 1)
 	  .on("mouseover", function(d,i) {
	div.transition()
		.duration(100)
		.style("opacity", .8);
	div.html(patientIDArray[i] + " patients")
		.style("left", (d3.event.pageX) + "px")
		.style("top", (d3.event.pageY - 28) + "px");
	}).on("mouseout", function(d) {
        div.transition()
        .duration(500)
        .style("opacity", 0);
})  /* .on("mouseover", function(){return tooltip.style("visibility", "visible");})
.on("mousemove", function(){return tooltip.style("top", (event.pageY-10)+"px").style("left",(event.pageX+10)+"px");})
.on("mouseout", function(){return tooltip.style("visibility", "hidden");}) */; 
 	//m++;
 //}
 	
//var count=;
   for(var i=0;i &lt; 1;i++)
	{
	   for(var j=0;j &lt; nodes.length;j++)
		   {
		     /* console.log("patient count+++++++++ "+patientIDArray[j]);
		   var fixed=patientIDArray[i];
		   //console.log("fixed============== "+fixed);
		   result=10*(patientIDArray[j]/fixed);
		   var randomValues = Math.random(result);
		   //console.log(patientIDArray[j]);
		  // result=Math.ceil(result);
		   console.log("Final count================ "+result);
		   //node = vis.selectAll("g.node").data(nodes[j]).enter().append("svg:g").attr("class", "node");
		   
			   node.append("svg:circle").attr("r", result).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);   */
			   
		   
		   }
	  /* for(var j=0;j &lt;= i;j++)
		  { */
		  
		 // console.log("doctorNameArray.length========= "+nodes[i].label);
	 /* console.log("patient count+++++++++ "+patientIDArray[i]);
	 var count=patientIDArray[i];
	 
	 console.log("Final count================ "+result); */
	// count=count+10;
	// console.log(patientIDArray[i]);
	//if (doctorNameArray[i] == doctorNameArray[i+1]) {
       	//console.log("inside for loop "+i);
       // count++;
      // alert(nodes);
      //var name=nodes[i].label;
      //new_nodes.push(name);
     // console.log("new node ================= "+new_nodes[i]);
       //console.log("nodes length============= "+nodes[i]+" "+name);
       //new_name=new_nodes[i];
       //console.log("new name================= "+new_name);
     // var node = vis.selectAll("g.node").data(nodes).enter().append("svg:g").attr("class", "node");
      
       /* if (nodes[i].label == nodes[i+1].label) 
		{
    	   					
			            	console.log("doctorNameArray "+doctorNameArray[i]+" "+doctorNameArray[i+1]);
			            	console.log("nodes length============= "+nodes[i]);
			            	count++;
			            	console.log("if count============== "+count);
			            	console.log("if node============== "+node);
			            	node.append("svg:circle").attr("r", count).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);
	   }
       else  
		{ 
    	   count = 1; 
		   console.log("else count============== "+count);
		   console.log("else node============== "+node);
		   node.append("svg:circle").attr("r", count).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);
		}  */
	/* } */
       // count++;
         /* node.append("svg:circle").attr("r", 
        		 function(x) 
	        	 {
	            		var returnColor;
			            if (doctorNameArray[i] == doctorNameArray[i+1]) 
			            {
			            	console.log("doctorNameArray "+doctorNameArray[i]+" "+doctorNameArray[i+1]);
			            	count++;
			            	returnColor = count;
			            	console.log("if count============== "+count);
			            	console.log("if count returnColor============== "+returnColor+" "+i);
			            }
	           // if (x > 1) { returnColor = count; } 
	            		else  
	            		{ 
	            			returnColor = 1; 
	            			console.log("else count============== "+returnColor);
	            		} 
             			return returnColor;
            	}).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3)
        ;  */
    // }
	// else
		//{
		 //console.log("doctorNameArray "+doctorNameArray[i]+" "+doctorNameArray[i+1]);
		//count=1;
		//node.append("svg:circle").attr("r", count).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3);
		/* node.append("svg:circle").attr("r", function(x) {
            var returnColor;
            if (x === 1) { returnColor = count; } 
            else  {  } 
             return returnColor;
            }).style("fill", "#555").style("stroke", "#FFF").style("stroke-width", 3)
		; */
		//console.log("else count============== "+count);
		//} 
	
	
	}   
 node.call(force.drag);



var anchorLink = vis.selectAll("line.anchorLink").data(labelAnchorLinks)//.enter().append("svg:line").attr("class", "anchorLink").style("stroke", "#999");

var anchorNode = vis.selectAll("g.anchorNode").data(force2.nodes()).enter().append("svg:g").attr("class", "anchorNode");
anchorNode.append("svg:circle").attr("r", 0).style("fill", "#FFF");
	anchorNode.append("svg:text").text(function(d, i) {
	return i % 2 == 0 ? "" : d.node.label
}).style("fill", "#000066").style("font-family", "Arial").style("font-size", 12);

var updateLink = function() {
	this.attr("x1", function(d) {
		return d.source.x;
	}).attr("y1", function(d) {
		return d.source.y;
	}).attr("x2", function(d) {
		return d.target.x;
	}).attr("y2", function(d) {
		return d.target.y;
	});

}

var updateNode = function() {
	this.attr("transform", function(d) {
		return "translate(" + d.x + "," + d.y + ")";
	});

}


force.on("tick", function() {

	force2.start();

	node.call(updateNode);

	anchorNode.each(function(d, i) {
		if(i % 2 == 0) {
			d.x = d.node.x;
			d.y = d.node.y;
		} else {
			var b = this.childNodes[1].getBBox();

			var diffX = d.x - d.node.x;
			var diffY = d.y - d.node.y;

			var dist = Math.sqrt(diffX * diffX + diffY * diffY);

			var shiftX = b.width * (diffX - dist) / (dist * 2);
			shiftX = Math.max(-b.width, Math.min(0, shiftX));
			var shiftY = 5;
			this.childNodes[1].setAttribute("transform", "translate(" + shiftX + "," + shiftY + ")");
		}
	});


	anchorNode.call(updateNode);

	link.call(updateLink);
	anchorLink.call(updateLink);

});
			}
			
			 

function displayHeatMapPatientListPopUp(genename,drugname)
{
	 /* alert(val);  */
	 document.getElementById('ddlHeatMapForm:hiddenTexforheatMapdrug').value=drugname; 
	 document.getElementById('ddlHeatMapForm:hiddenTexforheatMapgene').value=genename; 
	/*  alert(drugname+' '+genename);  */
	document.getElementById('ddlHeatMapForm:hiddenbtnforHeatMapPatient').click(); 
}
		</script>
<!-- Function to plot Drill Down for Med -->
<h:form id="jsForm">
	<script>
//<![CDATA[
function plotMedDrillDownChartNow(){
	
	/* $(document).ready(function(){*/
	
	// datavalue = '#{reportManageBean.rptMedByDrugCategoryBarList}';
		   

var datavalue = "";
datavalue=document.getElementById("frmMedTaken:outputDrugJSON").innerHTML; // $("#frmMedTaken:outputDrugJSON").html();
/* alert(datavalue); */
	 var barData1 =$.parseJSON(datavalue);
	 var barDataLen1=barData1.length;
	 
	// if(barData1 == "undefined" ||barData1 == "") {barDataLen1=0;}

	 //
	 console.log("---------------------Ram---------------");
	 console.log(barData1);
     console.log(barDataLen1);
	 
	 if(barDataLen1==0)
 	{
	 	/*  alert(" value anand: "+specialityDrugData); */
	 	 document.getElementById('drugDrillDownChart4MedDefault').style.display="block";
	 	 document.getElementById('drugDrillDownChart4Med').style.display="none";
 	}
	 else
	 {
		 /*  alert(" value anand: "+specialityDrugData); */
	 	 document.getElementById('drugDrillDownChart4MedDefault').style.display="none";
	 	 document.getElementById('drugDrillDownChart4Med').style.display="block";
	 }

	 var processed_json1 = new Array();
	 for(var i in barData1)
	 {
		console.log("json array drug categories  "+barData1[i].drugName);
		console.log("json array drug totalDrug  " +barData1[i].totalPatient);
		 var drugName= barData1[i].drugName;
		// var newString = drugCategories.substring(0,drugCategories.indexOf(','))+"<br />"+drugCategories.substring(drugCategories.indexOf(',')+1,drugCategories.length);
		// console.log("new String ======= "+newString);
		 var totalPatient = barData1[i].totalPatient;
		
		  processed_json1.push([(drugName),(totalPatient)]);
	
	 }
      
	console.log("-------------------printing json array data "+processed_json1);
	$("#drugDrillDownChart4Med").html("");
   
	$('#drugDrillDownChart4Med').highcharts({
        chart: {
            type: 'column'
        },
        title: {
            text: ' '
        },
        subtitle: {
            text: ''
        },
        xAxis: {
            type: 'category',
            labels: {
                rotation: -45,
                formatter: function() {
                    return(this.value.substring(0,8) + "...");
                },
                style: {
                    fontSize: '10px',
                    fontFamily: 'Verdana, sans-serif'
                }
            }
        },
        yAxis: {
            min: 0,
            title: {
                text: ''
                   
            }
        },
        legend: {
            enabled: false
        },
        tooltip: {
        	useHTML:true,
        
        	//pointFormat: 'Total Drug: <b>{point.y:.1f} </b>',
        	
        	 formatter: function() {
                //return "<div style='width: 400px; white-space:normal;'>"+this.point.name.substring(0,this.point.name.indexOf(',')+1)+'<br />'+this.point.name.substring(this.point.name.indexOf(',')+1,this.point.name.length)+'<br />'+'Drugs:'+'<b>'+ this.point.y+'.0</b>'+ "</div>";
                return  this.point.name +"<br/>"+'Total Medicines: '+'<b>'+ this.point.y+'</b>';
           } 
        
        },
        
        plotOptions: {
            column: {
                pointPadding: 0.2,
                borderWidth: 0,
                color:'#7CB5EC',
                cursor:'pointer',
                	pointWidth: 18
            },
            series: {
                stacking: 'normal',
                cursor: 'pointer',
            	point: {
                    events: {
                        click: function() {
                        	/* fnshowDrugDetail(event.point.name); */
                        	
                        }
                    }
                }
            }
        },
        series: [{
            name: '',
            data:processed_json1, 
            
            dataLabels: {
                enabled: true,
                rotation: -90,
                color: '#FFFFFF',
                align: 'right',
                x: 4,
                y: 8,
                style: {
                    fontSize: '9px',
                    fontFamily: 'Verdana, sans-serif',
                    textShadow: '0 0 3px black',
                    
                }
            }
        }]
    });  

//Med drill down
}
//]]>
							   </script>
</h:form>
</html>




