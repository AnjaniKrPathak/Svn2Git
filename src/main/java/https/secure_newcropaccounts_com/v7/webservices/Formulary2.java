package https.secure_newcropaccounts_com.v7.webservices;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * A web service that performs formulary related functions.
 *
 * This class was generated by Apache CXF 2.7.3
 * 2013-11-25T14:36:02.761+05:30
 * Generated source version: 2.7.3
 * 
 */
@WebServiceClient(name = "Formulary2", 
                  wsdlLocation = "http://preproduction.newcropaccounts.com/V7/WebServices/Formulary2.asmx?wsdl",
                  targetNamespace = "https://secure.newcropaccounts.com/V7/webservices") 
public class Formulary2 extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("https://secure.newcropaccounts.com/V7/webservices", "Formulary2");
    public final static QName Formulary2Soap12 = new QName("https://secure.newcropaccounts.com/V7/webservices", "Formulary2Soap12");
    public final static QName Formulary2Soap = new QName("https://secure.newcropaccounts.com/V7/webservices", "Formulary2Soap");
    public final static QName Formulary2HttpPost = new QName("https://secure.newcropaccounts.com/V7/webservices", "Formulary2HttpPost");
    static {
        URL url = null;
        try {
            url = new URL("http://preproduction.newcropaccounts.com/V7/WebServices/Formulary2.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Formulary2.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://preproduction.newcropaccounts.com/V7/WebServices/Formulary2.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public Formulary2(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Formulary2(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Formulary2() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns Formulary2Soap
     */
    @WebEndpoint(name = "Formulary2Soap12")
    public Formulary2Soap getFormulary2Soap12() {
        return super.getPort(Formulary2Soap12, Formulary2Soap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Formulary2Soap
     */
    @WebEndpoint(name = "Formulary2Soap12")
    public Formulary2Soap getFormulary2Soap12(WebServiceFeature... features) {
        return super.getPort(Formulary2Soap12, Formulary2Soap.class, features);
    }
    /**
     *
     * @return
     *     returns Formulary2Soap
     */
    @WebEndpoint(name = "Formulary2Soap")
    public Formulary2Soap getFormulary2Soap() {
        return super.getPort(Formulary2Soap, Formulary2Soap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Formulary2Soap
     */
    @WebEndpoint(name = "Formulary2Soap")
    public Formulary2Soap getFormulary2Soap(WebServiceFeature... features) {
        return super.getPort(Formulary2Soap, Formulary2Soap.class, features);
    }
    /**
     *
     * @return
     *     returns Formulary2HttpPost
     */
    @WebEndpoint(name = "Formulary2HttpPost")
    public Formulary2HttpPost getFormulary2HttpPost() {
        return super.getPort(Formulary2HttpPost, Formulary2HttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Formulary2HttpPost
     */
    @WebEndpoint(name = "Formulary2HttpPost")
    public Formulary2HttpPost getFormulary2HttpPost(WebServiceFeature... features) {
        return super.getPort(Formulary2HttpPost, Formulary2HttpPost.class, features);
    }

}
